{"version":3,"file":"utils-CpYcuoze.js","sources":["../../src/js/constants.js","../../src/js/colorUtils.js"],"sourcesContent":["export const DOM = {\n  randomColor: document.getElementById('randomColor'),\n  userColor: document.getElementById('userColor'),\n  colorInput: document.getElementById('colorInput'),\n  checkButton: document.getElementById('check-button'),\n  computerGuessButton: document.getElementById('computer-tip-button'),\n  feedback: document.getElementById('feedback'),\n  colorAdjust: document.getElementById('colorAdjust'),\n  plusRedButton: document.getElementById('plusRedButton'),\n  minusRedButton: document.getElementById('minusRedButton'),\n  plusGreenButton: document.getElementById('plusGreenButton'),\n  minusGreenButton: document.getElementById('minusGreenButton'),\n  plusBlueButton: document.getElementById('plusBlueButton'),\n  minusBlueButton: document.getElementById('minusBlueButton'),\n  difficulty: document.getElementById('difficulty'),\n  timer: document.getElementById('timer'),\n  score: document.getElementById('score'),\n  newGameButton: document.getElementById('new-game-button'),\n  resultModal: document.getElementById('resultModal'),\n  correctColorCode: document.getElementById('correctColorCode'),\n  allSecondaryButtons: document.querySelectorAll('.btn-secondary'),\n  modalCloseButtons: document.querySelectorAll('.js-modal-close'),\n};\n\nexport const DIFFICULTIES = {\n  easy: { tipCount: 3, computerTipCount: 3, score: 100 },\n  medium: { tipCount: 2, computerTipCount: 2, score: 200 },\n  hard: { tipCount: 1, computerTipCount: 1, score: 300 },\n};\n\nexport const STRINGS = {\n  memorizeColor: 'Memorizáld a színt!',\n  congratulations: 'Gratulálok! Eltaláltad!',\n  sorry: 'Sajnálom, nem találtad el.',\n  tryAgain: (tips) => `Próbáld újra! Még ${tips} tippelési lehetőséged van. `,\n  noMoreTips: 'Nincs több tipp',\n  computerTip: (tips) => `Gép tippje (${tips} maradt)`,\n  invalidColor: 'Érvénytelen színkód, alapértelmezettre állítva.',\n};\n","/**\n * Converts a hexadecimal color string to RGB values\n * @param {string} hex - Hexadecimal color string (with or without #)\n * @returns {{r: number, g: number, b: number}} RGB color object\n * @throws {Error} When hex color is invalid\n */\nfunction hexToRgb(hex) {\n  if (!hex || typeof hex !== 'string') {\n    throw new Error('Invalid hex color: must be a non-empty string');\n  }\n  \n  const cleanHex = hex.replace('#', '');\n  if (!/^[0-9A-Fa-f]{6}$/.test(cleanHex)) {\n    throw new Error(`Invalid hex color format: ${hex}`);\n  }\n  \n  const bigint = parseInt(cleanHex, 16);\n  const r = (bigint >> 16) & 255;\n  const g = (bigint >> 8) & 255;\n  const b = bigint & 255;\n  return { r, g, b };\n}\n\n/**\n * Converts RGB color values to XYZ color space\n * @param {number} r - Red component (0-255)\n * @param {number} g - Green component (0-255)\n * @param {number} b - Blue component (0-255)\n * @returns {{x: number, y: number, z: number}} XYZ color object\n */\nfunction rgbToXyz(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n  r *= 100;\n  g *= 100;\n  b *= 100;\n\n  const x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  const y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  const z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n\n  return { x, y, z };\n}\n\nfunction xyzToLab(x, y, z) {\n  x /= 95.047;\n  y /= 100.0;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n\n  const l = 116 * y - 16;\n  const a = 500 * (x - y);\n  const b = 200 * (y - z);\n\n  return { l, a, b };\n}\n\nfunction rgbToLab(rgb) {\n  const xyz = rgbToXyz(rgb.r, rgb.g, rgb.b);\n  return xyzToLab(xyz.x, xyz.y, xyz.z);\n}\n\nfunction deltaE76(lab1, lab2) {\n  return Math.sqrt(\n    Math.pow(lab1.l - lab2.l, 2) +\n      Math.pow(lab1.a - lab2.a, 2) +\n      Math.pow(lab1.b - lab2.b, 2)\n  );\n}\n\n/**\n * Compares two hex colors and returns feedback with similarity percentage\n * @param {string} userColor - User's guessed color in hex format\n * @param {string} correctColor - The correct color in hex format\n * @returns {string} Feedback message with percentage similarity\n * @throws {Error} When color formats are invalid\n */\nexport function compareColors(userColor, correctColor) {\n  try {\n    const userLab = rgbToLab(hexToRgb(userColor));\n    const correctLab = rgbToLab(hexToRgb(correctColor));\n\n    const deltaE = deltaE76(userLab, correctLab);\n    const percentage = Math.max(0, 100 - (deltaE / 2.3) * 100); // Normalize to 0-100%\n    let feedbackText = `A tipp ${percentage.toFixed(2)}%-ban helyes.`;\n\n    if (percentage > 90) {\n      feedbackText += ' Nagyon közel vagy!';\n    } else if (percentage > 70) {\n      feedbackText += ' Jó úton haladsz!';\n    } else if (percentage > 50) {\n      feedbackText += ' Nem rossz, de még dolgoznod kell rajta.';\n    } else {\n      feedbackText += ' Eléggé eltértél a helyes színtől.';\n    }\n\n    return feedbackText;\n  } catch (error) {\n    console.error('Color comparison failed:', error);\n    return 'Hiba történt a színek összehasonlítása során.';\n  }\n}\n\nexport function adjustHexColor(hex, component, value) {\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n  }\n\n  let r = parseInt(hex.substring(0, 2), 16);\n  let g = parseInt(hex.substring(2, 4), 16);\n  let b = parseInt(hex.substring(4, 6), 16);\n\n  switch (component) {\n    case 'r':\n      r = Math.min(255, Math.max(0, r + value));\n      break;\n    case 'g':\n      g = Math.min(255, Math.max(0, g + value));\n      break;\n    case 'b':\n      b = Math.min(255, Math.max(0, b + value));\n      break;\n  }\n\n  return [r, g, b].map((c) => c.toString(16).padStart(2, '0')).join('');\n}\n\nexport function generateRandomColor() {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nexport function isValidHexColor(hex) {\n  return /^#?[0-9A-F]{6}$/i.test(hex);\n}\n\nexport function generateCloseColor(generatedColor) {\n  const offset = Math.floor(Math.random() * 20) - 10; // Small deviation +/- 10\n  let r = Math.min(\n    255,\n    Math.max(0, parseInt(generatedColor.substring(1, 3), 16) + offset)\n  );\n  let g = Math.min(\n    255,\n    Math.max(0, parseInt(generatedColor.substring(3, 5), 16) + offset)\n  );\n  let b = Math.min(\n    255,\n    Math.max(0, parseInt(generatedColor.substring(5, 7), 16) + offset)\n  );\n\n  return `#${[r, g, b].map((c) => c.toString(16).padStart(2, '0')).join('')}`;\n}\n\n/**\n * Calculate color difference using Delta E (CIE76)\n * @param {string} color1 - First hex color\n * @param {string} color2 - Second hex color  \n * @returns {number} Delta E value (0 = identical, higher = more different)\n * @throws {Error} When color formats are invalid\n */\nexport function calculateColorDifference(color1, color2) {\n  try {\n    const rgb1 = hexToRgb(color1);\n    const rgb2 = hexToRgb(color2);\n    \n    const lab1 = rgbToLab(rgb1);\n    const lab2 = rgbToLab(rgb2);\n    \n    return deltaE76(lab1, lab2);\n  } catch (error) {\n    console.error('Color difference calculation failed:', error);\n    return 100; // Return high difference on error\n  }\n}\n"],"names":["DOM","DIFFICULTIES","STRINGS","tips","hexToRgb","hex","cleanHex","bigint","g","b","rgbToXyz","r","x","y","z","xyzToLab","l","rgbToLab","rgb","xyz","deltaE76","lab1","lab2","compareColors","userColor","correctColor","userLab","correctLab","deltaE","percentage","feedbackText","error","adjustHexColor","component","value","c","generateRandomColor","letters","color","i","isValidHexColor","generateCloseColor","generatedColor","offset","calculateColorDifference","color1","color2","rgb1","rgb2"],"mappings":"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"}