{"version":3,"file":"features-WjIVO5NO.js","sources":["../../src/js/errorHandler.js","../../src/js/storage.js","../../src/js/analytics.js","../../src/js/performance.js","../../src/js/i18n.js","../../src/js/pwaManager.js"],"sourcesContent":["/**\n * @fileoverview Advanced error handling and logging system\n * Provides centralized error management, logging, and user notification capabilities\n */\n\n/**\n * Error severity levels\n * @readonly\n * @enum {string}\n */\nexport const ERROR_LEVELS = {\n  DEBUG: 'debug',\n  INFO: 'info',\n  WARN: 'warn',\n  ERROR: 'error',\n  FATAL: 'fatal'\n};\n\n/**\n * Error categories for better classification\n * @readonly\n * @enum {string}\n */\nexport const ERROR_CATEGORIES = {\n  VALIDATION: 'validation',\n  NETWORK: 'network',\n  AUDIO: 'audio',\n  GAME_LOGIC: 'game_logic',\n  UI: 'ui',\n  STORAGE: 'storage'\n};\n\n/**\n * Custom error class with additional context\n */\nexport class ToneTrackerError extends Error {\n  /**\n   * @param {string} message - Error message\n   * @param {string} category - Error category\n   * @param {string} level - Error severity level\n   * @param {Object} context - Additional error context\n   */\n  constructor(message, category = ERROR_CATEGORIES.GAME_LOGIC, level = ERROR_LEVELS.ERROR, context = {}) {\n    super(message);\n    this.name = 'ToneTrackerError';\n    this.category = category;\n    this.level = level;\n    this.context = context;\n    this.timestamp = new Date().toISOString();\n    this.stack = Error.captureStackTrace ? Error.captureStackTrace(this, ToneTrackerError) : this.stack;\n  }\n}\n\n/**\n * Error logger with multiple output targets\n */\nclass ErrorLogger {\n  constructor() {\n    this.logs = [];\n    this.maxLogs = 100; // Keep only last 100 logs in memory\n    this.isProduction = import.meta.env.MODE === 'production';\n  }\n\n  /**\n   * Log an error with context\n   * @param {Error|ToneTrackerError} error - The error to log\n   * @param {Object} additionalContext - Additional context information\n   */\n  log(error, additionalContext = {}) {\n    const logEntry = {\n      timestamp: new Date().toISOString(),\n      message: error.message,\n      stack: error.stack,\n      category: error.category || ERROR_CATEGORIES.GAME_LOGIC,\n      level: error.level || ERROR_LEVELS.ERROR,\n      context: { ...error.context, ...additionalContext },\n      url: window.location.href,\n      userAgent: navigator.userAgent\n    };\n\n    // Add to in-memory logs\n    this.logs.push(logEntry);\n    if (this.logs.length > this.maxLogs) {\n      this.logs.shift(); // Remove oldest log\n    }\n\n    // Console logging based on level\n    this.logToConsole(logEntry);\n\n    // In production, you might want to send to external service\n    if (this.isProduction) {\n      this.logToExternalService(logEntry);\n    }\n\n    // Store critical errors locally\n    if (logEntry.level === ERROR_LEVELS.FATAL || logEntry.level === ERROR_LEVELS.ERROR) {\n      this.storeErrorLocally(logEntry);\n    }\n  }\n\n  /**\n   * Log to browser console\n   * @private\n   */\n  logToConsole(logEntry) {\n    const consoleMethod = {\n      [ERROR_LEVELS.DEBUG]: 'debug',\n      [ERROR_LEVELS.INFO]: 'info',\n      [ERROR_LEVELS.WARN]: 'warn',\n      [ERROR_LEVELS.ERROR]: 'error',\n      [ERROR_LEVELS.FATAL]: 'error'\n    }[logEntry.level] || 'log';\n\n    console[consoleMethod](\n      `[${logEntry.timestamp}] [${logEntry.category}] ${logEntry.message}`,\n      logEntry.context,\n      logEntry.stack\n    );\n  }\n\n  /**\n   * Store error in localStorage for later analysis\n   * @private\n   */\n  storeErrorLocally(logEntry) {\n    try {\n      const storedErrors = JSON.parse(localStorage.getItem('tonetracker_errors') || '[]');\n      storedErrors.push(logEntry);\n      \n      // Keep only last 20 errors in storage\n      if (storedErrors.length > 20) {\n        storedErrors.splice(0, storedErrors.length - 20);\n      }\n      \n      localStorage.setItem('tonetracker_errors', JSON.stringify(storedErrors));\n    } catch (error) {\n      console.warn('Failed to store error locally:', error);\n    }\n  }\n\n  /**\n   * Send error to external logging service (placeholder)\n   * @private\n   */\n  logToExternalService(/* logEntry */) {\n    // In a real application, you would send to services like Sentry, LogRocket, etc.\n    // fetch('/api/errors', {\n    //   method: 'POST',\n    //   headers: { 'Content-Type': 'application/json' },\n    //   body: JSON.stringify(logEntry)\n    // }).catch(() => {}); // Silent fail for logging\n  }\n\n  /**\n   * Get recent logs for debugging\n   * @param {number} count - Number of recent logs to return\n   * @returns {Array} Recent log entries\n   */\n  getRecentLogs(count = 10) {\n    return this.logs.slice(-count);\n  }\n\n  /**\n   * Clear all logs\n   */\n  clearLogs() {\n    this.logs = [];\n    localStorage.removeItem('tonetracker_errors');\n  }\n}\n\n// Singleton instance\nconst logger = new ErrorLogger();\n\n/**\n * Global error handler class\n */\nexport class ErrorHandler {\n  constructor() {\n    if (ErrorHandler.instance) {\n      return ErrorHandler.instance;\n    }\n    \n    this.logger = logger;\n    this.setupGlobalHandlers();\n    ErrorHandler.instance = this;\n  }\n\n  /**\n   * Setup global error handlers\n   * @private\n   */\n  setupGlobalHandlers() {\n    // Handle unhandled promise rejections\n    window.addEventListener('unhandledrejection', (event) => {\n      this.handleError(\n        new ToneTrackerError(\n          `Unhandled Promise Rejection: ${event.reason}`,\n          ERROR_CATEGORIES.GAME_LOGIC,\n          ERROR_LEVELS.ERROR,\n          { reason: event.reason }\n        )\n      );\n    });\n\n    // Handle uncaught exceptions\n    window.addEventListener('error', (event) => {\n      this.handleError(\n        new ToneTrackerError(\n          `Uncaught Exception: ${event.message}`,\n          ERROR_CATEGORIES.GAME_LOGIC,\n          ERROR_LEVELS.ERROR,\n          { \n            filename: event.filename,\n            lineno: event.lineno,\n            colno: event.colno,\n            error: event.error\n          }\n        )\n      );\n    });\n  }\n\n  /**\n   * Handle and log an error\n   * @param {Error|ToneTrackerError} error - The error to handle\n   * @param {Object} context - Additional context\n   * @param {boolean} showToUser - Whether to show error to user\n   */\n  handleError(error, context = {}, showToUser = true) {\n    // Log the error\n    this.logger.log(error, context);\n\n    // Show user-friendly message if requested\n    if (showToUser) {\n      this.showUserError(error);\n    }\n  }\n\n  /**\n   * Show user-friendly error message\n   * @private\n   */\n  showUserError(error) {\n    const userMessage = this.getUserFriendlyMessage(error);\n    \n    // Create or update error notification\n    let errorElement = document.getElementById('error-notification');\n    if (!errorElement) {\n      errorElement = document.createElement('div');\n      errorElement.id = 'error-notification';\n      errorElement.className = 'error-notification';\n      document.body.appendChild(errorElement);\n    }\n\n    errorElement.textContent = userMessage;\n    errorElement.style.display = 'block';\n    \n    // Auto-hide after 5 seconds\n    setTimeout(() => {\n      errorElement.style.display = 'none';\n    }, 5000);\n  }\n\n  /**\n   * Convert technical error to user-friendly message\n   * @private\n   */\n  getUserFriendlyMessage(error) {\n    const messages = {\n      [ERROR_CATEGORIES.VALIDATION]: 'Érvénytelen adat. Kérjük, ellenőrizze a bevitt értékeket.',\n      [ERROR_CATEGORIES.NETWORK]: 'Hálózati hiba történt. Kérjük, próbálja újra később.',\n      [ERROR_CATEGORIES.AUDIO]: 'Hang lejátszási hiba. Ellenőrizze a hang beállításokat.',\n      [ERROR_CATEGORIES.GAME_LOGIC]: 'Hiba történt a játék során. A játék automatikusan újraindul.',\n      [ERROR_CATEGORIES.UI]: 'Megjelenítési hiba történt. Kérjük, frissítse az oldalt.',\n      [ERROR_CATEGORIES.STORAGE]: 'Adattárolási hiba. Ellenőrizze a böngésző beállításait.'\n    };\n\n    return messages[error.category] || 'Váratlan hiba történt. Kérjük, próbálja újra.';\n  }\n\n  /**\n   * Create an async error wrapper function\n   * @param {Function} asyncFn - Async function to wrap\n   * @param {string} context - Context description\n   * @returns {Function} Wrapped function\n   */\n  wrapAsync(asyncFn, context = 'async operation') {\n    return async (...args) => {\n      try {\n        return await asyncFn(...args);\n      } catch (error) {\n        this.handleError(\n          error instanceof ToneTrackerError \n            ? error \n            : new ToneTrackerError(\n                `Error in ${context}: ${error.message}`,\n                ERROR_CATEGORIES.GAME_LOGIC,\n                ERROR_LEVELS.ERROR,\n                { originalError: error.message, context }\n              )\n        );\n        throw error;\n      }\n    };\n  }\n\n  /**\n   * Create a sync error wrapper function\n   * @param {Function} syncFn - Sync function to wrap\n   * @param {string} context - Context description\n   * @returns {Function} Wrapped function\n   */\n  wrapSync(syncFn, context = 'sync operation') {\n    return (...args) => {\n      try {\n        return syncFn(...args);\n      } catch (error) {\n        this.handleError(\n          error instanceof ToneTrackerError \n            ? error \n            : new ToneTrackerError(\n                `Error in ${context}: ${error.message}`,\n                ERROR_CATEGORIES.GAME_LOGIC,\n                ERROR_LEVELS.ERROR,\n                { originalError: error.message, context }\n              )\n        );\n        throw error;\n      }\n    };\n  }\n\n  /**\n   * Get error statistics for debugging\n   * @returns {Object} Error statistics\n   */\n  getErrorStats() {\n    const logs = this.logger.logs;\n    const stats = {\n      total: logs.length,\n      byLevel: {},\n      byCategory: {},\n      recent: this.logger.getRecentLogs(5)\n    };\n\n    logs.forEach(log => {\n      stats.byLevel[log.level] = (stats.byLevel[log.level] || 0) + 1;\n      stats.byCategory[log.category] = (stats.byCategory[log.category] || 0) + 1;\n    });\n\n    return stats;\n  }\n}\n\n// Add static property\nErrorHandler.instance = null;\n\n// Export singleton instance\nexport const errorHandler = new ErrorHandler();\n\n// Convenience functions\nexport const logError = (error, context, showToUser) => errorHandler.handleError(error, context, showToUser);\nexport const wrapAsync = (fn, context) => errorHandler.wrapAsync(fn, context);\nexport const wrapSync = (fn, context) => errorHandler.wrapSync(fn, context);\n","/**\n * @fileoverview Local storage manager for game data persistence\n * Provides type-safe localStorage operations with data validation and migration support\n */\n\nimport { ToneTrackerError, ERROR_CATEGORIES, ERROR_LEVELS } from './errorHandler.js';\n\n/**\n * Storage keys used throughout the application\n * @readonly\n * @enum {string}\n */\nexport const STORAGE_KEYS = {\n  GAME_STATISTICS: 'tonetracker_game_stats',\n  USER_PREFERENCES: 'tonetracker_user_prefs',\n  HIGH_SCORES: 'tonetracker_high_scores',\n  GAME_HISTORY: 'tonetracker_game_history',\n  SETTINGS: 'tonetracker_settings',\n  LOCALE: 'tonetracker_locale',\n  ERRORS: 'tonetracker_errors'\n};\n\n/**\n * Current data schema version for migration purposes\n */\nconst SCHEMA_VERSION = 1;\n\n/**\n * Default game statistics structure\n */\nconst DEFAULT_GAME_STATISTICS = {\n  version: SCHEMA_VERSION,\n  totalGames: 0,\n  gamesWon: 0,\n  gamesLost: 0,\n  totalScore: 0,\n  bestScore: 0,\n  averageScore: 0,\n  totalTimeSpent: 0, // in seconds\n  averageTime: 0,\n  bestTime: null,\n  currentStreak: 0,\n  bestStreak: 0,\n  difficultyCounts: {\n    easy: { played: 0, won: 0, totalScore: 0 },\n    medium: { played: 0, won: 0, totalScore: 0 },\n    hard: { played: 0, won: 0, totalScore: 0 }\n  },\n  colorAccuracyHistory: [], // Last 50 accuracy percentages\n  sessionStats: {\n    startTime: null,\n    gamesPlayed: 0,\n    gamesWon: 0\n  },\n  achievements: [],\n  lastPlayed: null,\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n};\n\n/**\n * Default user preferences structure\n */\nconst DEFAULT_USER_PREFERENCES = {\n  version: SCHEMA_VERSION,\n  difficulty: 'easy',\n  soundEnabled: true,\n  animationsEnabled: true,\n  showPercentageFeedback: true,\n  showTimer: true,\n  colorFormat: 'hex', // 'hex', 'rgb', 'hsl'\n  theme: 'light', // 'light', 'dark', 'auto'\n  autoStartNextGame: false,\n  showHints: true,\n  preferredLanguage: 'hu',\n  accessibility: {\n    reduceMotion: false,\n    highContrast: false,\n    screenReaderMode: false,\n    largerText: false\n  },\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n};\n\n/**\n * Default high scores structure\n */\nconst DEFAULT_HIGH_SCORES = {\n  version: SCHEMA_VERSION,\n  scores: [], // Array of {score, time, difficulty, date, accuracy}\n  maxScores: 100, // Keep only top 100 scores\n  createdAt: new Date().toISOString(),\n  updatedAt: new Date().toISOString()\n};\n\n/**\n * Storage manager class for handling localStorage operations\n */\nexport class StorageManager {\n  constructor() {\n    this.isSupported = this.checkStorageSupport();\n    this.cache = new Map();\n    this.listeners = new Map();\n    \n    if (this.isSupported) {\n      this.migrateData();\n    }\n  }\n\n  /**\n   * Check if localStorage is supported and available\n   * @private\n   * @returns {boolean} Whether localStorage is supported\n   */\n  checkStorageSupport() {\n    try {\n      const testKey = '__storage_test__';\n      localStorage.setItem(testKey, 'test');\n      localStorage.removeItem(testKey);\n      return true;\n    } catch (error) {\n      console.warn('LocalStorage is not available:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Migrate data from older versions if needed\n   * @private\n   */\n  migrateData() {\n    try {\n      // Check if migration is needed for each data type\n      const stats = this.getRaw(STORAGE_KEYS.GAME_STATISTICS);\n      if (stats && (!stats.version || stats.version < SCHEMA_VERSION)) {\n        this.migrateGameStatistics(stats);\n      }\n\n      const prefs = this.getRaw(STORAGE_KEYS.USER_PREFERENCES);\n      if (prefs && (!prefs.version || prefs.version < SCHEMA_VERSION)) {\n        this.migrateUserPreferences(prefs);\n      }\n\n      const scores = this.getRaw(STORAGE_KEYS.HIGH_SCORES);\n      if (scores && (!scores.version || scores.version < SCHEMA_VERSION)) {\n        this.migrateHighScores(scores);\n      }\n    } catch (error) {\n      console.warn('Data migration failed:', error);\n    }\n  }\n\n  /**\n   * Migrate game statistics to current version\n   * @private\n   */\n  migrateGameStatistics(oldStats) {\n    const newStats = { ...DEFAULT_GAME_STATISTICS, ...oldStats };\n    newStats.version = SCHEMA_VERSION;\n    newStats.updatedAt = new Date().toISOString();\n    this.set(STORAGE_KEYS.GAME_STATISTICS, newStats);\n  }\n\n  /**\n   * Migrate user preferences to current version\n   * @private\n   */\n  migrateUserPreferences(oldPrefs) {\n    const newPrefs = { ...DEFAULT_USER_PREFERENCES, ...oldPrefs };\n    newPrefs.version = SCHEMA_VERSION;\n    newPrefs.updatedAt = new Date().toISOString();\n    this.set(STORAGE_KEYS.USER_PREFERENCES, newPrefs);\n  }\n\n  /**\n   * Migrate high scores to current version\n   * @private\n   */\n  migrateHighScores(oldScores) {\n    const newScores = { ...DEFAULT_HIGH_SCORES, ...oldScores };\n    newScores.version = SCHEMA_VERSION;\n    newScores.updatedAt = new Date().toISOString();\n    this.set(STORAGE_KEYS.HIGH_SCORES, newScores);\n  }\n\n  /**\n   * Get raw data from localStorage without parsing\n   * @private\n   */\n  getRaw(key) {\n    if (!this.isSupported) return null;\n    \n    try {\n      const data = localStorage.getItem(key);\n      return data ? JSON.parse(data) : null;\n    } catch (error) {\n      console.warn(`Failed to get raw data for key ${key}:`, error);\n      return null;\n    }\n  }\n\n  /**\n   * Set data in localStorage\n   * @param {string} key - Storage key\n   * @param {*} value - Value to store\n   * @returns {boolean} Success status\n   */\n  set(key, value) {\n    if (!this.isSupported) {\n      console.warn('LocalStorage not supported, data not saved');\n      return false;\n    }\n\n    try {\n      const serialized = JSON.stringify(value);\n      localStorage.setItem(key, serialized);\n      \n      // Update cache\n      this.cache.set(key, value);\n      \n      // Notify listeners\n      this.notifyListeners(key, value);\n      \n      return true;\n    } catch (error) {\n      throw new ToneTrackerError(\n        `Failed to save data to localStorage: ${error.message}`,\n        ERROR_CATEGORIES.STORAGE,\n        ERROR_LEVELS.ERROR,\n        { key, error: error.message }\n      );\n    }\n  }\n\n  /**\n   * Get data from localStorage with fallback to default\n   * @param {string} key - Storage key\n   * @param {*} defaultValue - Default value if key doesn't exist\n   * @returns {*} Retrieved value or default\n   */\n  get(key, defaultValue = null) {\n    if (!this.isSupported) {\n      return defaultValue;\n    }\n\n    // Check cache first\n    if (this.cache.has(key)) {\n      return this.cache.get(key);\n    }\n\n    try {\n      const data = localStorage.getItem(key);\n      if (data === null) {\n        return defaultValue;\n      }\n\n      const parsed = JSON.parse(data);\n      \n      // Update cache\n      this.cache.set(key, parsed);\n      \n      return parsed;\n    } catch (error) {\n      console.warn(`Failed to get data for key ${key}:`, error);\n      return defaultValue;\n    }\n  }\n\n  /**\n   * Remove data from localStorage\n   * @param {string} key - Storage key\n   */\n  remove(key) {\n    if (!this.isSupported) return;\n\n    try {\n      localStorage.removeItem(key);\n      this.cache.delete(key);\n      this.notifyListeners(key, null);\n    } catch (error) {\n      console.warn(`Failed to remove key ${key}:`, error);\n    }\n  }\n\n  /**\n   * Clear all ToneTracker data from localStorage\n   */\n  clear() {\n    if (!this.isSupported) return;\n\n    try {\n      Object.values(STORAGE_KEYS).forEach(key => {\n        localStorage.removeItem(key);\n        this.cache.delete(key);\n      });\n      console.log('All ToneTracker data cleared from localStorage');\n    } catch (error) {\n      console.warn('Failed to clear localStorage:', error);\n    }\n  }\n\n  /**\n   * Get game statistics\n   * @returns {Object} Game statistics\n   */\n  getGameStatistics() {\n    return this.get(STORAGE_KEYS.GAME_STATISTICS, { ...DEFAULT_GAME_STATISTICS });\n  }\n\n  /**\n   * Update game statistics\n   * @param {Object} updates - Statistics updates\n   */\n  updateGameStatistics(updates) {\n    const current = this.getGameStatistics();\n    const updated = {\n      ...current,\n      ...updates,\n      updatedAt: new Date().toISOString()\n    };\n\n    // Recalculate derived values\n    if ('totalGames' in updates || 'totalScore' in updates) {\n      updated.averageScore = updated.totalGames > 0 \n        ? Math.round(updated.totalScore / updated.totalGames) \n        : 0;\n    }\n\n    this.set(STORAGE_KEYS.GAME_STATISTICS, updated);\n    return updated;\n  }\n\n  /**\n   * Record a completed game\n   * @param {Object} gameResult - Game result data\n   */\n  recordGame(gameResult) {\n    const {\n      won,\n      score,\n      time,\n      difficulty,\n      accuracy,\n      targetColor,\n      userGuess\n    } = gameResult;\n\n    const stats = this.getGameStatistics();\n    \n    // Update basic stats\n    stats.totalGames += 1;\n    stats.totalTimeSpent += time;\n    stats.averageTime = Math.round(stats.totalTimeSpent / stats.totalGames);\n\n    if (won) {\n      stats.gamesWon += 1;\n      stats.totalScore += score;\n      stats.currentStreak += 1;\n      stats.bestStreak = Math.max(stats.bestStreak, stats.currentStreak);\n      \n      if (score > stats.bestScore) {\n        stats.bestScore = score;\n      }\n      \n      if (!stats.bestTime || time < stats.bestTime) {\n        stats.bestTime = time;\n      }\n    } else {\n      stats.gamesLost += 1;\n      stats.currentStreak = 0;\n    }\n\n    // Update difficulty-specific stats\n    if (stats.difficultyCounts[difficulty]) {\n      stats.difficultyCounts[difficulty].played += 1;\n      if (won) {\n        stats.difficultyCounts[difficulty].won += 1;\n        stats.difficultyCounts[difficulty].totalScore += score;\n      }\n    }\n\n    // Update accuracy history (keep last 50)\n    if (accuracy !== undefined) {\n      stats.colorAccuracyHistory.push(accuracy);\n      if (stats.colorAccuracyHistory.length > 50) {\n        stats.colorAccuracyHistory.shift();\n      }\n    }\n\n    // Update session stats\n    if (!stats.sessionStats.startTime) {\n      stats.sessionStats.startTime = new Date().toISOString();\n    }\n    stats.sessionStats.gamesPlayed += 1;\n    if (won) {\n      stats.sessionStats.gamesWon += 1;\n    }\n\n    // Update derived values\n    stats.averageScore = stats.gamesWon > 0 \n      ? Math.round(stats.totalScore / stats.gamesWon) \n      : 0;\n    \n    stats.lastPlayed = new Date().toISOString();\n    stats.updatedAt = new Date().toISOString();\n\n    this.set(STORAGE_KEYS.GAME_STATISTICS, stats);\n\n    // Also record high score if applicable\n    if (won && score > 0) {\n      this.addHighScore({\n        score,\n        time,\n        difficulty,\n        accuracy,\n        date: new Date().toISOString(),\n        targetColor,\n        userGuess\n      });\n    }\n\n    return stats;\n  }\n\n  /**\n   * Get user preferences\n   * @returns {Object} User preferences\n   */\n  getUserPreferences() {\n    return this.get(STORAGE_KEYS.USER_PREFERENCES, { ...DEFAULT_USER_PREFERENCES });\n  }\n\n  /**\n   * Update user preferences\n   * @param {Object} updates - Preference updates\n   */\n  updateUserPreferences(updates) {\n    const current = this.getUserPreferences();\n    const updated = {\n      ...current,\n      ...updates,\n      updatedAt: new Date().toISOString()\n    };\n\n    this.set(STORAGE_KEYS.USER_PREFERENCES, updated);\n    return updated;\n  }\n\n  /**\n   * Get high scores\n   * @returns {Object} High scores data\n   */\n  getHighScores() {\n    return this.get(STORAGE_KEYS.HIGH_SCORES, { ...DEFAULT_HIGH_SCORES });\n  }\n\n  /**\n   * Add a new high score\n   * @param {Object} scoreData - Score data\n   */\n  addHighScore(scoreData) {\n    const highScores = this.getHighScores();\n    \n    highScores.scores.push({\n      ...scoreData,\n      id: Date.now().toString(),\n      timestamp: new Date().toISOString()\n    });\n\n    // Sort by score descending, then by time ascending\n    highScores.scores.sort((a, b) => {\n      if (b.score !== a.score) {\n        return b.score - a.score;\n      }\n      return a.time - b.time;\n    });\n\n    // Keep only top scores\n    if (highScores.scores.length > highScores.maxScores) {\n      highScores.scores = highScores.scores.slice(0, highScores.maxScores);\n    }\n\n    highScores.updatedAt = new Date().toISOString();\n    this.set(STORAGE_KEYS.HIGH_SCORES, highScores);\n    \n    return highScores;\n  }\n\n  /**\n   * Get top scores for a specific difficulty\n   * @param {string} difficulty - Difficulty level\n   * @param {number} limit - Maximum number of scores to return\n   * @returns {Array} Top scores\n   */\n  getTopScores(difficulty = null, limit = 10) {\n    const highScores = this.getHighScores();\n    let scores = highScores.scores;\n\n    if (difficulty) {\n      scores = scores.filter(score => score.difficulty === difficulty);\n    }\n\n    return scores.slice(0, limit);\n  }\n\n  /**\n   * Subscribe to storage changes\n   * @param {string} key - Storage key to watch\n   * @param {Function} callback - Callback function\n   * @returns {Function} Unsubscribe function\n   */\n  subscribe(key, callback) {\n    if (!this.listeners.has(key)) {\n      this.listeners.set(key, new Set());\n    }\n    \n    this.listeners.get(key).add(callback);\n    \n    // Return unsubscribe function\n    return () => {\n      const keyListeners = this.listeners.get(key);\n      if (keyListeners) {\n        keyListeners.delete(callback);\n        if (keyListeners.size === 0) {\n          this.listeners.delete(key);\n        }\n      }\n    };\n  }\n\n  /**\n   * Notify listeners of storage changes\n   * @private\n   */\n  notifyListeners(key, value) {\n    const keyListeners = this.listeners.get(key);\n    if (keyListeners) {\n      keyListeners.forEach(callback => {\n        try {\n          callback(value, key);\n        } catch (error) {\n          console.warn('Storage listener callback failed:', error);\n        }\n      });\n    }\n  }\n\n  /**\n   * Export all data for backup\n   * @returns {Object} All stored data\n   */\n  exportData() {\n    const data = {};\n    \n    Object.entries(STORAGE_KEYS).forEach(([name, key]) => {\n      data[name] = this.get(key);\n    });\n\n    data.exportedAt = new Date().toISOString();\n    data.version = SCHEMA_VERSION;\n    \n    return data;\n  }\n\n  /**\n   * Import data from backup\n   * @param {Object} data - Data to import\n   * @param {boolean} merge - Whether to merge with existing data\n   */\n  importData(data, merge = false) {\n    if (!data || typeof data !== 'object') {\n      throw new ToneTrackerError(\n        'Invalid data format for import',\n        ERROR_CATEGORIES.VALIDATION,\n        ERROR_LEVELS.ERROR\n      );\n    }\n\n    try {\n      Object.entries(STORAGE_KEYS).forEach(([name, key]) => {\n        if (data[name]) {\n          if (merge) {\n            const existing = this.get(key);\n            if (existing && typeof existing === 'object') {\n              this.set(key, { ...existing, ...data[name] });\n            } else {\n              this.set(key, data[name]);\n            }\n          } else {\n            this.set(key, data[name]);\n          }\n        }\n      });\n      \n      console.log('Data import completed successfully');\n    } catch (error) {\n      throw new ToneTrackerError(\n        `Data import failed: ${error.message}`,\n        ERROR_CATEGORIES.STORAGE,\n        ERROR_LEVELS.ERROR,\n        { error: error.message }\n      );\n    }\n  }\n\n  /**\n   * Get storage usage information\n   * @returns {Object} Storage usage stats\n   */\n  getStorageInfo() {\n    if (!this.isSupported) {\n      return { supported: false };\n    }\n\n    let totalSize = 0;\n    const keyData = {};\n\n    Object.values(STORAGE_KEYS).forEach(key => {\n      try {\n        const data = localStorage.getItem(key);\n        const size = data ? new Blob([data]).size : 0;\n        totalSize += size;\n        keyData[key] = {\n          exists: !!data,\n          size: size,\n          sizeFormatted: this.formatBytes(size)\n        };\n      } catch (error) {\n        keyData[key] = { error: error.message };\n      }\n    });\n\n    return {\n      supported: true,\n      totalSize: totalSize,\n      totalSizeFormatted: this.formatBytes(totalSize),\n      keys: keyData,\n      cacheSize: this.cache.size\n    };\n  }\n\n  /**\n   * Format bytes to human readable format\n   * @private\n   */\n  formatBytes(bytes) {\n    if (bytes === 0) return '0 Bytes';\n    \n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    \n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  }\n}\n\n// Export singleton instance\nexport const storage = new StorageManager();\n","/**\n * @fileoverview Analytics system for tracking user behavior and game performance\n * Privacy-focused analytics with local storage and optional external reporting\n */\n\n// Error handling imports - commented out to avoid unused variable warnings\n// import { ToneTrackerError, ERROR_CATEGORIES, ERROR_LEVELS } from './errorHandler.js';\nimport { storage } from './storage.js';\n\n/**\n * Event types for analytics tracking\n * @readonly\n * @enum {string}\n */\nexport const EVENT_TYPES = {\n  // Game events\n  GAME_START: 'game_start',\n  GAME_END: 'game_end',\n  GAME_WIN: 'game_win',\n  GAME_LOSE: 'game_lose',\n  COLOR_GUESS: 'color_guess',\n  COMPUTER_TIP_USED: 'computer_tip_used',\n  \n  // UI events\n  DIFFICULTY_CHANGE: 'difficulty_change',\n  LANGUAGE_CHANGE: 'language_change',\n  THEME_CHANGE: 'theme_change',\n  SOUND_TOGGLE: 'sound_toggle',\n  \n  // User journey\n  PAGE_VIEW: 'page_view',\n  SESSION_START: 'session_start',\n  SESSION_END: 'session_end',\n  FEATURE_USED: 'feature_used',\n  ERROR_OCCURRED: 'error_occurred',\n  \n  // Performance\n  LOAD_TIME: 'load_time',\n  RENDER_TIME: 'render_time',\n  PERFORMANCE_ISSUE: 'performance_issue',\n  \n  // Accessibility\n  ACCESSIBILITY_FEATURE_USED: 'accessibility_feature_used',\n  KEYBOARD_NAVIGATION: 'keyboard_navigation',\n  SCREEN_READER_DETECTED: 'screen_reader_detected'\n};\n\n/**\n * Event categories for grouping\n * @readonly\n * @enum {string}\n */\nexport const EVENT_CATEGORIES = {\n  GAME: 'game',\n  UI: 'ui',\n  PERFORMANCE: 'performance',\n  ERROR: 'error',\n  USER_JOURNEY: 'user_journey',\n  ACCESSIBILITY: 'accessibility'\n};\n\n/**\n * Analytics configuration\n */\nconst ANALYTICS_CONFIG = {\n  maxEvents: 1000, // Maximum events to store locally\n  batchSize: 50, // Events to send in each batch\n  flushInterval: 30000, // 30 seconds\n  sessionTimeout: 30 * 60 * 1000, // 30 minutes\n  enableConsoleLogging: true, // Log events to console in development\n  enableLocalStorage: true, // Store events locally\n  enableExternalReporting: false, // Send to external analytics service\n  privacyMode: true, // Enhanced privacy protection\n  \n  // External service configuration (placeholder)\n  externalService: {\n    endpoint: null,\n    apiKey: null,\n    enabled: false\n  }\n};\n\n/**\n * Analytics class for tracking events and user behavior\n */\nexport class Analytics {\n  constructor(config = {}) {\n    this.config = { ...ANALYTICS_CONFIG, ...config };\n    this.events = [];\n    this.sessionId = this.generateSessionId();\n    this.sessionStart = Date.now();\n    this.lastActivity = Date.now();\n    this.batchTimer = null;\n    this.isEnabled = true;\n    this.userId = this.getUserId();\n    \n    // Device and environment detection\n    this.deviceInfo = this.collectDeviceInfo();\n    \n    // Initialize session\n    this.initializeSession();\n    \n    // Setup automatic flushing\n    this.setupAutoFlush();\n    \n    // Setup page visibility handling\n    this.setupVisibilityHandling();\n    \n    // Load stored events\n    this.loadStoredEvents();\n  }\n\n  /**\n   * Generate a unique session ID\n   * @private\n   * @returns {string} Session ID\n   */\n  generateSessionId() {\n    return `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  /**\n   * Get or create a user ID (anonymous)\n   * @private\n   * @returns {string} Anonymous user ID\n   */\n  getUserId() {\n    let userId = storage.get('tonetracker_user_id');\n    if (!userId) {\n      userId = `user_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n      storage.set('tonetracker_user_id', userId);\n    }\n    return userId;\n  }\n\n  /**\n   * Collect device and environment information\n   * @private\n   * @returns {Object} Device information\n   */\n  collectDeviceInfo() {\n    const nav = navigator;\n    const screen = window.screen;\n    \n    return {\n      userAgent: this.config.privacyMode ? this.hashString(nav.userAgent) : nav.userAgent,\n      language: nav.language,\n      languages: nav.languages,\n      platform: nav.platform,\n      screenWidth: screen.width,\n      screenHeight: screen.height,\n      viewportWidth: window.innerWidth,\n      viewportHeight: window.innerHeight,\n      colorDepth: screen.colorDepth,\n      pixelRatio: window.devicePixelRatio,\n      touchSupport: 'ontouchstart' in window,\n      cookieEnabled: nav.cookieEnabled,\n      onlineStatus: nav.onLine,\n      timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n      // Privacy-aware feature detection\n      features: {\n        localStorage: this.isLocalStorageAvailable(),\n        webgl: this.isWebGLAvailable(),\n        webAudio: this.isWebAudioAvailable(),\n        gamepads: 'getGamepads' in nav,\n        geolocation: 'geolocation' in nav,\n        notifications: 'Notification' in window,\n        serviceWorker: 'serviceWorker' in nav\n      }\n    };\n  }\n\n  /**\n   * Hash sensitive strings for privacy\n   * @private\n   */\n  hashString(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      hash = ((hash << 5) - hash) + char;\n      hash = hash & hash; // Convert to 32-bit integer\n    }\n    return `hash_${Math.abs(hash).toString(36)}`;\n  }\n\n  /**\n   * Feature detection methods\n   * @private\n   */\n  isLocalStorageAvailable() {\n    try {\n      return typeof Storage !== 'undefined';\n    } catch {\n      return false;\n    }\n  }\n\n  isWebGLAvailable() {\n    try {\n      const canvas = document.createElement('canvas');\n      return !!(window.WebGLRenderingContext && canvas.getContext('webgl'));\n    } catch {\n      return false;\n    }\n  }\n\n  isWebAudioAvailable() {\n    return !!(window.AudioContext || window.webkitAudioContext);\n  }\n\n  /**\n   * Initialize session tracking\n   * @private\n   */\n  initializeSession() {\n    this.track(EVENT_TYPES.SESSION_START, {\n      sessionId: this.sessionId,\n      deviceInfo: this.deviceInfo,\n      timestamp: this.sessionStart\n    });\n  }\n\n  /**\n   * Setup automatic event flushing\n   * @private\n   */\n  setupAutoFlush() {\n    if (this.config.flushInterval > 0) {\n      this.batchTimer = setInterval(() => {\n        this.flush();\n      }, this.config.flushInterval);\n    }\n  }\n\n  /**\n   * Setup page visibility handling\n   * @private\n   */\n  setupVisibilityHandling() {\n    document.addEventListener('visibilitychange', () => {\n      if (document.hidden) {\n        this.track(EVENT_TYPES.SESSION_END, {\n          sessionDuration: Date.now() - this.sessionStart,\n          eventsTracked: this.events.length\n        });\n        this.flush();\n      } else {\n        this.updateActivity();\n      }\n    });\n\n    // Handle page unload\n    window.addEventListener('beforeunload', () => {\n      this.track(EVENT_TYPES.SESSION_END, {\n        sessionDuration: Date.now() - this.sessionStart,\n        eventsTracked: this.events.length\n      });\n      this.flush(true); // Force immediate flush\n    });\n  }\n\n  /**\n   * Load stored events from previous sessions\n   * @private\n   */\n  loadStoredEvents() {\n    if (this.config.enableLocalStorage) {\n      try {\n        const stored = storage.get('tonetracker_analytics_events', []);\n        if (Array.isArray(stored)) {\n          this.events = stored.slice(-this.config.maxEvents);\n        }\n      } catch (error) {\n        console.warn('Failed to load stored analytics events:', error);\n      }\n    }\n  }\n\n  /**\n   * Update last activity timestamp\n   * @private\n   */\n  updateActivity() {\n    this.lastActivity = Date.now();\n  }\n\n  /**\n   * Check if session is still active\n   * @private\n   * @returns {boolean} Whether session is active\n   */\n  isSessionActive() {\n    return Date.now() - this.lastActivity < this.config.sessionTimeout;\n  }\n\n  /**\n   * Track an event\n   * @param {string} eventType - Type of event\n   * @param {Object} properties - Event properties\n   * @param {string} category - Event category\n   */\n  track(eventType, properties = {}, category = null) {\n    if (!this.isEnabled) return;\n\n    this.updateActivity();\n\n    const event = {\n      id: this.generateEventId(),\n      type: eventType,\n      category: category || this.getCategoryForEvent(eventType),\n      properties: {\n        ...properties,\n        sessionId: this.sessionId,\n        userId: this.userId,\n        timestamp: Date.now(),\n        url: window.location.href,\n        userAgent: this.config.privacyMode ? 'redacted' : navigator.userAgent,\n        language: navigator.language,\n        viewport: {\n          width: window.innerWidth,\n          height: window.innerHeight\n        }\n      },\n      createdAt: new Date().toISOString()\n    };\n\n    // Add to events array\n    this.events.push(event);\n\n    // Limit stored events\n    if (this.events.length > this.config.maxEvents) {\n      this.events = this.events.slice(-this.config.maxEvents);\n    }\n\n    // Console logging for development\n    if (this.config.enableConsoleLogging && !this.config.privacyMode) {\n      console.log('📊 Analytics Event:', eventType, properties);\n    }\n\n    // Store locally if enabled\n    if (this.config.enableLocalStorage) {\n      this.storeEvents();\n    }\n\n    // Auto-flush if batch is full\n    if (this.events.length >= this.config.batchSize) {\n      this.flush();\n    }\n  }\n\n  /**\n   * Generate unique event ID\n   * @private\n   */\n  generateEventId() {\n    return `evt_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  /**\n   * Get category for event type\n   * @private\n   */\n  getCategoryForEvent(eventType) {\n    const gameEvents = [\n      EVENT_TYPES.GAME_START, EVENT_TYPES.GAME_END, \n      EVENT_TYPES.GAME_WIN, EVENT_TYPES.GAME_LOSE,\n      EVENT_TYPES.COLOR_GUESS, EVENT_TYPES.COMPUTER_TIP_USED\n    ];\n    \n    const uiEvents = [\n      EVENT_TYPES.DIFFICULTY_CHANGE, EVENT_TYPES.LANGUAGE_CHANGE,\n      EVENT_TYPES.THEME_CHANGE, EVENT_TYPES.SOUND_TOGGLE\n    ];\n\n    const performanceEvents = [\n      EVENT_TYPES.LOAD_TIME, EVENT_TYPES.RENDER_TIME\n    ];\n\n    const accessibilityEvents = [\n      EVENT_TYPES.ACCESSIBILITY_FEATURE_USED,\n      EVENT_TYPES.KEYBOARD_NAVIGATION,\n      EVENT_TYPES.SCREEN_READER_DETECTED\n    ];\n\n    if (gameEvents.includes(eventType)) return EVENT_CATEGORIES.GAME;\n    if (uiEvents.includes(eventType)) return EVENT_CATEGORIES.UI;\n    if (performanceEvents.includes(eventType)) return EVENT_CATEGORIES.PERFORMANCE;\n    if (accessibilityEvents.includes(eventType)) return EVENT_CATEGORIES.ACCESSIBILITY;\n    if (eventType === EVENT_TYPES.ERROR_OCCURRED) return EVENT_CATEGORIES.ERROR;\n    \n    return EVENT_CATEGORIES.USER_JOURNEY;\n  }\n\n  /**\n   * Store events to localStorage\n   * @private\n   */\n  storeEvents() {\n    try {\n      storage.set('tonetracker_analytics_events', this.events);\n    } catch (error) {\n      console.warn('Failed to store analytics events:', error);\n    }\n  }\n\n  /**\n   * Flush events to external service or storage\n   * @param {boolean} force - Force immediate flush\n   */\n  async flush(force = false) {\n    if (this.events.length === 0) return;\n\n    const eventsToFlush = [...this.events];\n    \n    try {\n      if (this.config.enableExternalReporting && this.config.externalService.enabled) {\n        await this.sendToExternalService(eventsToFlush);\n      }\n\n      // Store summary statistics locally\n      this.updateAnalyticsSummary(eventsToFlush);\n\n      // Clear sent events\n      this.events = [];\n      \n      if (this.config.enableLocalStorage) {\n        this.storeEvents();\n      }\n\n    } catch (error) {\n      console.warn('Failed to flush analytics events:', error);\n      \n      // On error, keep events for retry\n      if (!force) {\n        return;\n      }\n    }\n  }\n\n  /**\n   * Send events to external analytics service\n   * @private\n   */\n  async sendToExternalService(events) {\n    const { endpoint, apiKey } = this.config.externalService;\n    \n    if (!endpoint) {\n      console.warn('External analytics endpoint not configured');\n      return;\n    }\n\n    const payload = {\n      events: events,\n      metadata: {\n        source: 'ToneTracker',\n        version: '2.0.0',\n        timestamp: new Date().toISOString()\n      }\n    };\n\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        ...(apiKey && { 'Authorization': `Bearer ${apiKey}` })\n      },\n      body: JSON.stringify(payload)\n    });\n\n    if (!response.ok) {\n      throw new Error(`Analytics service error: ${response.status}`);\n    }\n  }\n\n  /**\n   * Update analytics summary statistics\n   * @private\n   */\n  updateAnalyticsSummary(events) {\n    try {\n      const summary = storage.get('tonetracker_analytics_summary', {\n        totalEvents: 0,\n        eventCounts: {},\n        lastUpdated: null,\n        sessions: []\n      });\n\n      summary.totalEvents += events.length;\n      summary.lastUpdated = new Date().toISOString();\n\n      // Count events by type\n      events.forEach(event => {\n        summary.eventCounts[event.type] = (summary.eventCounts[event.type] || 0) + 1;\n      });\n\n      // Track session info\n      const sessionEvents = events.filter(e => e.type === EVENT_TYPES.SESSION_START);\n      sessionEvents.forEach(event => {\n        summary.sessions.push({\n          sessionId: event.properties.sessionId,\n          startTime: event.createdAt,\n          deviceInfo: event.properties.deviceInfo\n        });\n      });\n\n      // Keep only recent sessions (last 100)\n      if (summary.sessions.length > 100) {\n        summary.sessions = summary.sessions.slice(-100);\n      }\n\n      storage.set('tonetracker_analytics_summary', summary);\n    } catch (error) {\n      console.warn('Failed to update analytics summary:', error);\n    }\n  }\n\n  /**\n   * Track game-specific events with convenience methods\n   */\n  trackGameStart(difficulty, targetColor) {\n    this.track(EVENT_TYPES.GAME_START, {\n      difficulty,\n      targetColor: this.config.privacyMode ? 'redacted' : targetColor,\n      gameId: this.generateEventId()\n    });\n  }\n\n  trackGameEnd(won, score, time, difficulty, accuracy) {\n    this.track(won ? EVENT_TYPES.GAME_WIN : EVENT_TYPES.GAME_LOSE, {\n      won,\n      score,\n      time,\n      difficulty,\n      accuracy,\n      performance: this.calculatePerformanceMetrics(score, time, accuracy)\n    });\n  }\n\n  trackColorGuess(userGuess, targetColor, accuracy, isCorrect) {\n    this.track(EVENT_TYPES.COLOR_GUESS, {\n      userGuess: this.config.privacyMode ? 'redacted' : userGuess,\n      targetColor: this.config.privacyMode ? 'redacted' : targetColor,\n      accuracy,\n      isCorrect,\n      deltaE: this.calculateDeltaE(userGuess, targetColor)\n    });\n  }\n\n  trackFeatureUsage(feature, context = {}) {\n    this.track(EVENT_TYPES.FEATURE_USED, {\n      feature,\n      ...context\n    });\n  }\n\n  trackError(error, context = {}) {\n    this.track(EVENT_TYPES.ERROR_OCCURRED, {\n      message: error.message,\n      category: error.category || 'unknown',\n      level: error.level || 'error',\n      stack: this.config.privacyMode ? 'redacted' : error.stack,\n      ...context\n    });\n  }\n\n  trackPerformance(metric, value, context = {}) {\n    this.track(EVENT_TYPES.RENDER_TIME, {\n      metric,\n      value,\n      unit: 'ms',\n      ...context\n    });\n  }\n\n  /**\n   * Calculate performance metrics\n   * @private\n   */\n  calculatePerformanceMetrics(score, time, accuracy) {\n    return {\n      scorePerSecond: time > 0 ? score / (time / 1000) : 0,\n      efficiency: accuracy > 0 ? score / accuracy : 0,\n      timeCategory: this.categorizeTime(time)\n    };\n  }\n\n  /**\n   * Categorize time performance\n   * @private\n   */\n  categorizeTime(time) {\n    if (time < 10000) return 'fast';\n    if (time < 30000) return 'medium';\n    if (time < 60000) return 'slow';\n    return 'very_slow';\n  }\n\n  /**\n   * Calculate Delta E (color difference)\n   * @private\n   */\n  calculateDeltaE(color1, color2) {\n    // Simplified Delta E calculation for analytics\n    // In a real implementation, you'd use the proper Lab color space conversion\n    try {\n      const hex1 = color1.replace('#', '');\n      const hex2 = color2.replace('#', '');\n      \n      const r1 = parseInt(hex1.substr(0, 2), 16);\n      const g1 = parseInt(hex1.substr(2, 2), 16);\n      const b1 = parseInt(hex1.substr(4, 2), 16);\n      \n      const r2 = parseInt(hex2.substr(0, 2), 16);\n      const g2 = parseInt(hex2.substr(2, 2), 16);\n      const b2 = parseInt(hex2.substr(4, 2), 16);\n      \n      return Math.sqrt(\n        Math.pow(r2 - r1, 2) + \n        Math.pow(g2 - g1, 2) + \n        Math.pow(b2 - b1, 2)\n      );\n    } catch {\n      return 0;\n    }\n  }\n\n  /**\n   * Get analytics summary\n   * @returns {Object} Analytics summary\n   */\n  getAnalyticsSummary() {\n    const stored = storage.get('tonetracker_analytics_summary', {});\n    return {\n      ...stored,\n      currentSession: {\n        id: this.sessionId,\n        startTime: this.sessionStart,\n        duration: Date.now() - this.sessionStart,\n        eventsCount: this.events.length,\n        isActive: this.isSessionActive()\n      }\n    };\n  }\n\n  /**\n   * Enable or disable analytics\n   * @param {boolean} enabled - Whether to enable analytics\n   */\n  setEnabled(enabled) {\n    this.isEnabled = enabled;\n    if (!enabled) {\n      this.flush(true);\n      this.clearEvents();\n    }\n  }\n\n  /**\n   * Clear all stored events\n   */\n  clearEvents() {\n    this.events = [];\n    if (this.config.enableLocalStorage) {\n      storage.remove('tonetracker_analytics_events');\n      storage.remove('tonetracker_analytics_summary');\n    }\n  }\n\n  /**\n   * Cleanup analytics instance\n   */\n  destroy() {\n    if (this.batchTimer) {\n      clearInterval(this.batchTimer);\n    }\n    this.flush(true);\n  }\n}\n\n// Export singleton instance\nexport const analytics = new Analytics();\n\n// Convenience functions\nexport const trackEvent = (type, properties, category) => analytics.track(type, properties, category);\nexport const trackGameStart = (difficulty, color) => analytics.trackGameStart(difficulty, color);\nexport const trackGameEnd = (won, score, time, difficulty, accuracy) => \n  analytics.trackGameEnd(won, score, time, difficulty, accuracy);\nexport const trackError = (error, context) => analytics.trackError(error, context);\nexport const trackFeature = (feature, context) => analytics.trackFeatureUsage(feature, context);\n","/**\n * @fileoverview Performance monitoring and optimization utilities\n * Provides comprehensive performance tracking and optimization features\n */\n\nimport { analytics, EVENT_TYPES } from './analytics.js';\n// Error handling imports - commented out to avoid unused variable warnings\n// import { ToneTrackerError, ERROR_CATEGORIES, ERROR_LEVELS } from './errorHandler.js';\n\n/**\n * Performance metrics collection\n */\nexport class PerformanceMonitor {\n  constructor() {\n    this.metrics = new Map();\n    this.observers = new Map();\n    this.startTimes = new Map();\n    this.isEnabled = true;\n    \n    // Initialize performance observers\n    this.initializeObservers();\n    \n    // Track initial page load metrics\n    this.trackPageLoad();\n  }\n\n  /**\n   * Initialize performance observers\n   * @private\n   */\n  initializeObservers() {\n    // Performance Observer for navigation timing\n    if ('PerformanceObserver' in window) {\n      try {\n        // Navigation timing\n        const navObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach(entry => {\n            if (entry.entryType === 'navigation') {\n              this.recordNavigationMetrics(entry);\n            }\n          });\n        });\n        navObserver.observe({ entryTypes: ['navigation'] });\n        this.observers.set('navigation', navObserver);\n\n        // Resource timing\n        const resourceObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach(entry => {\n            if (entry.entryType === 'resource') {\n              this.recordResourceMetrics(entry);\n            }\n          });\n        });\n        resourceObserver.observe({ entryTypes: ['resource'] });\n        this.observers.set('resource', resourceObserver);\n\n        // Paint timing\n        const paintObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach(entry => {\n            if (entry.entryType === 'paint') {\n              this.recordPaintMetrics(entry);\n            }\n          });\n        });\n        paintObserver.observe({ entryTypes: ['paint'] });\n        this.observers.set('paint', paintObserver);\n\n        // Largest Contentful Paint\n        if ('largest-contentful-paint' in PerformanceObserver.supportedEntryTypes) {\n          const lcpObserver = new PerformanceObserver((list) => {\n            const entries = list.getEntries();\n            entries.forEach(entry => {\n              this.recordMetric('largest-contentful-paint', entry.startTime);\n            });\n          });\n          lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] });\n          this.observers.set('lcp', lcpObserver);\n        }\n\n        // First Input Delay\n        if ('first-input' in PerformanceObserver.supportedEntryTypes) {\n          const fidObserver = new PerformanceObserver((list) => {\n            const entries = list.getEntries();\n            entries.forEach(entry => {\n              this.recordMetric('first-input-delay', entry.processingStart - entry.startTime);\n            });\n          });\n          fidObserver.observe({ entryTypes: ['first-input'] });\n          this.observers.set('fid', fidObserver);\n        }\n\n        // Layout shift\n        if ('layout-shift' in PerformanceObserver.supportedEntryTypes) {\n          let cumulativeLayoutShift = 0;\n          const clsObserver = new PerformanceObserver((list) => {\n            const entries = list.getEntries();\n            entries.forEach(entry => {\n              if (!entry.hadRecentInput) {\n                cumulativeLayoutShift += entry.value;\n                this.recordMetric('cumulative-layout-shift', cumulativeLayoutShift);\n              }\n            });\n          });\n          clsObserver.observe({ entryTypes: ['layout-shift'] });\n          this.observers.set('cls', clsObserver);\n        }\n\n      } catch (error) {\n        console.warn('Performance observers not supported:', error);\n      }\n    }\n  }\n\n  /**\n   * Track page load performance\n   * @private\n   */\n  trackPageLoad() {\n    if ('performance' in window && 'timing' in performance) {\n      window.addEventListener('load', () => {\n        setTimeout(() => {\n          const timing = performance.timing;\n          const navigation = performance.getEntriesByType('navigation')[0];\n          \n          const metrics = {\n            // Navigation timing metrics\n            dns: timing.domainLookupEnd - timing.domainLookupStart,\n            tcp: timing.connectEnd - timing.connectStart,\n            ssl: timing.secureConnectionStart > 0 ? timing.connectEnd - timing.secureConnectionStart : 0,\n            ttfb: timing.responseStart - timing.navigationStart,\n            download: timing.responseEnd - timing.responseStart,\n            domInteractive: timing.domInteractive - timing.navigationStart,\n            domContentLoaded: timing.domContentLoadedEventEnd - timing.navigationStart,\n            domComplete: timing.domComplete - timing.navigationStart,\n            loadComplete: timing.loadEventEnd - timing.navigationStart,\n            \n            // Navigation API v2 metrics (if available)\n            ...(navigation && {\n              redirectTime: navigation.redirectEnd - navigation.redirectStart,\n              workerTime: navigation.workerStart > 0 ? navigation.responseStart - navigation.workerStart : 0,\n              fetchTime: navigation.responseEnd - navigation.fetchStart\n            })\n          };\n\n          // Record all metrics\n          Object.entries(metrics).forEach(([name, value]) => {\n            if (value >= 0) {\n              this.recordMetric(`page-load-${name}`, value);\n            }\n          });\n\n          // Track overall page load time\n          analytics.trackPerformance('page-load-total', metrics.loadComplete);\n          \n        }, 100); // Small delay to ensure all timing data is available\n      });\n    }\n  }\n\n  /**\n   * Record navigation timing metrics\n   * @private\n   */\n  recordNavigationMetrics(entry) {\n    const metrics = {\n      'nav-redirect-time': entry.redirectEnd - entry.redirectStart,\n      'nav-dns-time': entry.domainLookupEnd - entry.domainLookupStart,\n      'nav-connect-time': entry.connectEnd - entry.connectStart,\n      'nav-request-time': entry.responseStart - entry.requestStart,\n      'nav-response-time': entry.responseEnd - entry.responseStart,\n      'nav-dom-interactive': entry.domInteractive,\n      'nav-dom-content-loaded': entry.domContentLoadedEventEnd,\n      'nav-load-complete': entry.loadEventEnd\n    };\n\n    Object.entries(metrics).forEach(([name, value]) => {\n      if (value >= 0) {\n        this.recordMetric(name, value);\n      }\n    });\n  }\n\n  /**\n   * Record resource timing metrics\n   * @private\n   */\n  recordResourceMetrics(entry) {\n    const resourceType = this.getResourceType(entry.name);\n    const duration = entry.responseEnd - entry.startTime;\n    \n    this.recordMetric(`resource-${resourceType}-time`, duration);\n    \n    // Track slow resources (>1s)\n    if (duration > 1000) {\n      analytics.track(EVENT_TYPES.PERFORMANCE_ISSUE, {\n        type: 'slow-resource',\n        resource: entry.name,\n        duration: duration,\n        resourceType: resourceType\n      });\n    }\n  }\n\n  /**\n   * Record paint timing metrics\n   * @private\n   */\n  recordPaintMetrics(entry) {\n    this.recordMetric(entry.name, entry.startTime);\n    analytics.trackPerformance(entry.name, entry.startTime);\n  }\n\n  /**\n   * Get resource type from URL\n   * @private\n   */\n  getResourceType(url) {\n    if (url.includes('.js')) return 'script';\n    if (url.includes('.css')) return 'stylesheet';\n    if (url.match(/\\.(jpg|jpeg|png|gif|webp|svg)$/i)) return 'image';\n    if (url.match(/\\.(woff|woff2|ttf|eot)$/i)) return 'font';\n    return 'other';\n  }\n\n  /**\n   * Start timing a custom operation\n   * @param {string} label - Timing label\n   */\n  startTiming(label) {\n    if (!this.isEnabled) return;\n    \n    this.startTimes.set(label, performance.now());\n  }\n\n  /**\n   * End timing and record metric\n   * @param {string} label - Timing label\n   * @param {Object} context - Additional context\n   */\n  endTiming(label, context = {}) {\n    if (!this.isEnabled) return;\n    \n    const startTime = this.startTimes.get(label);\n    if (startTime !== undefined) {\n      const duration = performance.now() - startTime;\n      this.recordMetric(label, duration);\n      this.startTimes.delete(label);\n      \n      analytics.trackPerformance(label, duration, context);\n    }\n  }\n\n  /**\n   * Record a performance metric\n   * @param {string} name - Metric name\n   * @param {number} value - Metric value\n   * @param {string} unit - Unit of measurement\n   */\n  recordMetric(name, value, unit = 'ms') {\n    if (!this.isEnabled) return;\n    \n    const metric = {\n      name,\n      value,\n      unit,\n      timestamp: Date.now()\n    };\n    \n    this.metrics.set(name, metric);\n    \n    // Log performance issues\n    this.checkPerformanceThresholds(name, value);\n  }\n\n  /**\n   * Check if metrics exceed performance thresholds\n   * @private\n   */\n  checkPerformanceThresholds(name, value) {\n    const thresholds = {\n      'page-load-total': 3000,\n      'largest-contentful-paint': 2500,\n      'first-input-delay': 100,\n      'cumulative-layout-shift': 0.1,\n      'first-contentful-paint': 1800,\n      'time-to-interactive': 3800\n    };\n\n    const threshold = thresholds[name];\n    if (threshold && value > threshold) {\n      analytics.track(EVENT_TYPES.PERFORMANCE_ISSUE, {\n        metric: name,\n        value: value,\n        threshold: threshold,\n        severity: value > threshold * 2 ? 'high' : 'medium'\n      });\n    }\n  }\n\n  /**\n   * Get all recorded metrics\n   * @returns {Map} All metrics\n   */\n  getMetrics() {\n    return new Map(this.metrics);\n  }\n\n  /**\n   * Get specific metric\n   * @param {string} name - Metric name\n   * @returns {Object|null} Metric data\n   */\n  getMetric(name) {\n    return this.metrics.get(name) || null;\n  }\n\n  /**\n   * Clear all metrics\n   */\n  clearMetrics() {\n    this.metrics.clear();\n    this.startTimes.clear();\n  }\n\n  /**\n   * Generate performance report\n   * @returns {Object} Performance report\n   */\n  generateReport() {\n    const report = {\n      timestamp: new Date().toISOString(),\n      metrics: Object.fromEntries(this.metrics),\n      summary: {\n        totalMetrics: this.metrics.size,\n        criticalIssues: 0,\n        warnings: 0\n      }\n    };\n\n    // Analyze metrics for issues\n    this.metrics.forEach((metric, name) => {\n      const thresholds = {\n        'page-load-total': { critical: 5000, warning: 3000 },\n        'largest-contentful-paint': { critical: 4000, warning: 2500 },\n        'first-input-delay': { critical: 300, warning: 100 },\n        'cumulative-layout-shift': { critical: 0.25, warning: 0.1 }\n      };\n\n      const threshold = thresholds[name];\n      if (threshold) {\n        if (metric.value > threshold.critical) {\n          report.summary.criticalIssues++;\n        } else if (metric.value > threshold.warning) {\n          report.summary.warnings++;\n        }\n      }\n    });\n\n    return report;\n  }\n\n  /**\n   * Cleanup performance monitor\n   */\n  destroy() {\n    this.observers.forEach(observer => observer.disconnect());\n    this.observers.clear();\n    this.clearMetrics();\n  }\n}\n\n/**\n * Memory monitoring utilities\n */\nexport class MemoryMonitor {\n  constructor() {\n    this.snapshots = [];\n    this.isEnabled = 'memory' in performance;\n  }\n\n  /**\n   * Take memory snapshot\n   * @returns {Object|null} Memory snapshot\n   */\n  takeSnapshot() {\n    if (!this.isEnabled) return null;\n\n    const memory = performance.memory;\n    const snapshot = {\n      timestamp: Date.now(),\n      usedJSHeapSize: memory.usedJSHeapSize,\n      totalJSHeapSize: memory.totalJSHeapSize,\n      jsHeapSizeLimit: memory.jsHeapSizeLimit,\n      heapUsagePercent: (memory.usedJSHeapSize / memory.jsHeapSizeLimit) * 100\n    };\n\n    this.snapshots.push(snapshot);\n    \n    // Keep only last 100 snapshots\n    if (this.snapshots.length > 100) {\n      this.snapshots = this.snapshots.slice(-100);\n    }\n\n    // Check for memory leaks\n    this.checkMemoryLeaks(snapshot);\n\n    return snapshot;\n  }\n\n  /**\n   * Check for potential memory leaks\n   * @private\n   */\n  checkMemoryLeaks(snapshot) {\n    if (this.snapshots.length < 10) return;\n\n    // Check if memory usage has increased significantly over time\n    const recent = this.snapshots.slice(-10);\n    const first = recent[0];\n    const last = recent[recent.length - 1];\n    \n    const growthRate = (last.usedJSHeapSize - first.usedJSHeapSize) / first.usedJSHeapSize;\n    \n    if (growthRate > 0.5) { // 50% increase\n      analytics.track(EVENT_TYPES.PERFORMANCE_ISSUE, {\n        type: 'potential-memory-leak',\n        growthRate: growthRate,\n        currentUsage: snapshot.heapUsagePercent,\n        totalHeapSize: snapshot.totalJSHeapSize\n      });\n    }\n\n    // Warn if heap usage is very high\n    if (snapshot.heapUsagePercent > 90) {\n      analytics.track(EVENT_TYPES.PERFORMANCE_ISSUE, {\n        type: 'high-memory-usage',\n        heapUsagePercent: snapshot.heapUsagePercent,\n        severity: 'critical'\n      });\n    }\n  }\n\n  /**\n   * Get memory usage trend\n   * @returns {Object} Memory trend analysis\n   */\n  getMemoryTrend() {\n    if (this.snapshots.length < 2) return null;\n\n    const first = this.snapshots[0];\n    const last = this.snapshots[this.snapshots.length - 1];\n    \n    return {\n      timespan: last.timestamp - first.timestamp,\n      startUsage: first.usedJSHeapSize,\n      endUsage: last.usedJSHeapSize,\n      growth: last.usedJSHeapSize - first.usedJSHeapSize,\n      growthRate: (last.usedJSHeapSize - first.usedJSHeapSize) / first.usedJSHeapSize,\n      averageUsage: this.snapshots.reduce((sum, s) => sum + s.usedJSHeapSize, 0) / this.snapshots.length,\n      peakUsage: Math.max(...this.snapshots.map(s => s.usedJSHeapSize))\n    };\n  }\n}\n\n/**\n * FPS (Frames Per Second) monitoring\n */\nexport class FPSMonitor {\n  constructor() {\n    this.samples = [];\n    this.lastTime = performance.now();\n    this.isRunning = false;\n    this.animationId = null;\n  }\n\n  /**\n   * Start FPS monitoring\n   */\n  start() {\n    if (this.isRunning) return;\n    \n    this.isRunning = true;\n    this.lastTime = performance.now();\n    this.tick();\n  }\n\n  /**\n   * Stop FPS monitoring\n   */\n  stop() {\n    this.isRunning = false;\n    if (this.animationId) {\n      cancelAnimationFrame(this.animationId);\n    }\n  }\n\n  /**\n   * FPS measurement tick\n   * @private\n   */\n  tick() {\n    if (!this.isRunning) return;\n\n    const now = performance.now();\n    const delta = now - this.lastTime;\n    const fps = 1000 / delta;\n    \n    this.samples.push({\n      timestamp: now,\n      fps: fps,\n      frameTime: delta\n    });\n\n    // Keep only last 60 samples (approximately 1 second at 60fps)\n    if (this.samples.length > 60) {\n      this.samples = this.samples.slice(-60);\n    }\n\n    // Check for FPS drops\n    if (fps < 30 && this.samples.length > 10) {\n      const avgFps = this.samples.reduce((sum, s) => sum + s.fps, 0) / this.samples.length;\n      if (avgFps < 45) {\n        analytics.track(EVENT_TYPES.PERFORMANCE_ISSUE, {\n          type: 'low-fps',\n          currentFps: fps,\n          averageFps: avgFps,\n          severity: fps < 20 ? 'critical' : 'medium'\n        });\n      }\n    }\n\n    this.lastTime = now;\n    this.animationId = requestAnimationFrame(() => this.tick());\n  }\n\n  /**\n   * Get current FPS statistics\n   * @returns {Object} FPS statistics\n   */\n  getStats() {\n    if (this.samples.length === 0) return null;\n\n    const fps = this.samples.map(s => s.fps);\n    const frameTimes = this.samples.map(s => s.frameTime);\n\n    return {\n      currentFps: fps[fps.length - 1],\n      averageFps: fps.reduce((sum, f) => sum + f, 0) / fps.length,\n      minFps: Math.min(...fps),\n      maxFps: Math.max(...fps),\n      averageFrameTime: frameTimes.reduce((sum, f) => sum + f, 0) / frameTimes.length,\n      samples: this.samples.length\n    };\n  }\n}\n\n// Export singleton instances\nexport const performanceMonitor = new PerformanceMonitor();\nexport const memoryMonitor = new MemoryMonitor();\nexport const fpsMonitor = new FPSMonitor();\n\n// Convenience functions\nexport const startTiming = (label) => performanceMonitor.startTiming(label);\nexport const endTiming = (label, context) => performanceMonitor.endTiming(label, context);\nexport const recordMetric = (name, value, unit) => performanceMonitor.recordMetric(name, value, unit);\nexport const takeMemorySnapshot = () => memoryMonitor.takeSnapshot();\nexport const startFPSMonitoring = () => fpsMonitor.start();\nexport const stopFPSMonitoring = () => fpsMonitor.stop();\n","/**\n * @fileoverview Internationalization (i18n) system\n * Provides multi-language support with locale switching and formatting\n */\n\nimport { ToneTrackerError, ERROR_CATEGORIES, ERROR_LEVELS } from './errorHandler.js';\n\n/**\n * Translation resources for different languages\n */\nconst translations = {\n  hu: {\n    // Game UI\n    gameTitle: 'Tonetracker v.2.0.0',\n    gameDescription: 'Színfelismerő játék: memorizálj egy színt, majd próbáld meg reprodukálni hex kódok vagy RGB értékek segítségével.',\n    \n    // Controls\n    checkButton: 'Ellenőriz',\n    computerTipButton: 'Gép tippje',\n    newGameButton: 'Új játék',\n    closeButton: 'Bezár',\n    \n    // Input labels\n    hexColorInput: 'Hex színkód bevitele',\n    hexColorPlaceholder: 'Írd be a hex színkódot (pl. ff5733)',\n    hexColorHelp: 'Hat karakteres hex kód, például ff5733.',\n    colorAdjustLabel: 'Szín módosítása:',\n    colorAdjustHelp: 'Hex színkód közvetlen szerkesztése.',\n    difficultyLabel: 'Nehézségi szint:',\n    difficultyHelp: 'A nehézségi szint meghatározza a rendelkezésre álló tippek számát.',\n    \n    // Difficulty levels\n    difficultyEasy: 'Könnyű (3 tipp)',\n    difficultyMedium: 'Közepes (2 tipp)',\n    difficultyHard: 'Nehéz (1 tipp)',\n    \n    // Color components\n    colorComponents: 'Szín komponensek:',\n    redChannel: 'Vörös',\n    greenChannel: 'Zöld',\n    blueChannel: 'Kék',\n    increaseValue: '{{channel}} érték növelése 1-gyel',\n    decreaseValue: '{{channel}} érték csökkentése 1-gyel',\n    \n    // ARIA labels\n    skipToMain: 'Ugrás a fő tartalomra',\n    gameArea: 'Játék terület',\n    colorComparison: 'Szín összehasonlító terület',\n    targetColor: 'Megjegyzendő szín',\n    userColor: 'Az általad beállított szín',\n    targetColorHelp: 'Ez a szín jelenik meg 3 másodpercig. Memorizáld és próbáld reprodukálni.',\n    gameControls: 'Játék vezérlő gombok',\n    gameStats: 'Játék statisztikák',\n    rgbControls: 'RGB értékek finomhangolása',\n    creatorInfo: 'Alkotó információk',\n    \n    // Button help texts\n    checkButtonHelp: 'Ellenőrzi a beírt színkódot és visszajelzést ad.',\n    computerTipHelp: 'Gép által generált tipp a helyes színhez.',\n    newGameHelp: 'Új játék indítása - egy véletlen szín jelenik meg 3 másodpercig.',\n    \n    // Feedback messages\n    memorizeColor: 'Memorizáld a színt!',\n    congratulations: 'Gratulálok! Eltaláltad!',\n    sorry: 'Sajnálom, nem találtad el.',\n    tryAgain: 'Próbáld újra! Még {{count}} tippelési lehetőséged van. ',\n    noMoreTips: 'Nincs több tipp',\n    computerTip: 'Gép tippje ({{count}} maradt)',\n    invalidColor: 'Érvénytelen színkód, alapértelmezettre állítva.',\n    \n    // Color comparison feedback\n    colorAccuracy: 'A tipp {{percentage}}%-ban helyes.',\n    veryClose: 'Nagyon közel vagy!',\n    goodProgress: 'Jó úton haladsz!',\n    needsWork: 'Nem rossz, de még dolgoznod kell rajta.',\n    farOff: 'Eléggé eltértél a helyes színtől.',\n    \n    // Game stats\n    time: 'Idő',\n    elapsedTime: 'Eltelt idő',\n    score: 'Pontok',\n    currentScore: 'Jelenlegi pontok',\n    seconds: 'másodperc',\n    \n    // Modal\n    gameResult: 'Játék eredménye',\n    correctColorCode: 'A helyes színkód:',\n    closeModal: 'Ablak bezárása',\n    \n    // Time formatting\n    timeFormat: {\n      hours: 'óra',\n      minutes: 'perc',\n      seconds: 'másodperc'\n    },\n    \n    // Creator info\n    creatorName: 'Dr. Porkoláb Ádám',\n    creatorTitle: 'A digitális színek mestere',\n    creatorBio: 'Amikor épp nem színkódokat tör be, akkor új módszereket talál ki a virtuális szivárványok hajszolására. Következetesen a \\'Hex-kódtörő\\' címért versenyez, és a billentyűzetével töri fel a színes világok titkait.',\n    contact: 'Elérhetőség:',\n    website: 'Profiloldal:',\n    github: 'GitHub:',\n    contactEmail: 'E-mail küldése Dr. Porkoláb Ádámnak',\n    websiteLink: 'Dr. Porkoláb Ádám profiloldala (megnyílik egy új lapon)',\n    githubLink: 'GitHub profil (megnyílik egy új lapon)',\n    \n    // Error messages\n    errors: {\n      validation: 'Érvénytelen adat. Kérjük, ellenőrizze a bevitt értékeket.',\n      network: 'Hálózati hiba történt. Kérjük, próbálja újra később.',\n      audio: 'Hang lejátszási hiba. Ellenőrizze a hang beállításokat.',\n      gameLogic: 'Hiba történt a játék során. A játék automatikusan újraindul.',\n      ui: 'Megjelenítési hiba történt. Kérjük, frissítse az oldalt.',\n      storage: 'Adattárolási hiba. Ellenőrizze a böngésző beállításait.',\n      generic: 'Váratlan hiba történt. Kérjük, próbálja újra.',\n      colorComparison: 'Hiba történt a színek összehasonlítása során.',\n      audioPlayback: 'Hangfájl hiba: ',\n      audioError: 'Hiba történt a hang lejátszása közben.'\n    }\n  },\n  \n  en: {\n    // Game UI\n    gameTitle: 'Tonetracker v.2.0.0',\n    gameDescription: 'Color recognition game: memorize a color, then try to reproduce it using hex codes or RGB values.',\n    \n    // Controls\n    checkButton: 'Check',\n    computerTipButton: 'Computer Tip',\n    newGameButton: 'New Game',\n    closeButton: 'Close',\n    \n    // Input labels\n    hexColorInput: 'Enter hex color code',\n    hexColorPlaceholder: 'Enter hex color code (e.g. ff5733)',\n    hexColorHelp: 'Six-character hex code, for example ff5733.',\n    colorAdjustLabel: 'Adjust color:',\n    colorAdjustHelp: 'Direct hex color code editing.',\n    difficultyLabel: 'Difficulty level:',\n    difficultyHelp: 'The difficulty level determines the number of available tips.',\n    \n    // Difficulty levels\n    difficultyEasy: 'Easy (3 tips)',\n    difficultyMedium: 'Medium (2 tips)',\n    difficultyHard: 'Hard (1 tip)',\n    \n    // Color components\n    colorComponents: 'Color components:',\n    redChannel: 'Red',\n    greenChannel: 'Green',\n    blueChannel: 'Blue',\n    increaseValue: 'Increase {{channel}} value by 1',\n    decreaseValue: 'Decrease {{channel}} value by 1',\n    \n    // ARIA labels\n    skipToMain: 'Skip to main content',\n    gameArea: 'Game area',\n    colorComparison: 'Color comparison area',\n    targetColor: 'Target color to memorize',\n    userColor: 'Your chosen color',\n    targetColorHelp: 'This color appears for 3 seconds. Memorize it and try to reproduce it.',\n    gameControls: 'Game control buttons',\n    gameStats: 'Game statistics',\n    rgbControls: 'RGB values fine-tuning',\n    creatorInfo: 'Creator information',\n    \n    // Button help texts\n    checkButtonHelp: 'Checks the entered color code and provides feedback.',\n    computerTipHelp: 'Computer-generated tip for the correct color.',\n    newGameHelp: 'Start a new game - a random color appears for 3 seconds.',\n    \n    // Feedback messages\n    memorizeColor: 'Memorize the color!',\n    congratulations: 'Congratulations! You got it!',\n    sorry: 'Sorry, you didn\\'t get it.',\n    tryAgain: 'Try again! You have {{count}} more attempts left. ',\n    noMoreTips: 'No more tips',\n    computerTip: 'Computer tip ({{count}} remaining)',\n    invalidColor: 'Invalid color code, reset to default.',\n    \n    // Color comparison feedback\n    colorAccuracy: 'Your guess is {{percentage}}% accurate.',\n    veryClose: 'Very close!',\n    goodProgress: 'You\\'re on the right track!',\n    needsWork: 'Not bad, but you need to work on it.',\n    farOff: 'You\\'re quite far from the correct color.',\n    \n    // Game stats\n    time: 'Time',\n    elapsedTime: 'Elapsed time',\n    score: 'Score',\n    currentScore: 'Current score',\n    seconds: 'seconds',\n    \n    // Modal\n    gameResult: 'Game Result',\n    correctColorCode: 'The correct color code:',\n    closeModal: 'Close window',\n    \n    // Time formatting\n    timeFormat: {\n      hours: 'hours',\n      minutes: 'minutes',\n      seconds: 'seconds'\n    },\n    \n    // Creator info\n    creatorName: 'Dr. Ádám Porkoláb',\n    creatorTitle: 'Master of Digital Colors',\n    creatorBio: 'When not cracking color codes, he invents new methods for chasing virtual rainbows. Consistently competing for the \\'Hex-code Breaker\\' title, breaking the secrets of colorful worlds with his keyboard.',\n    contact: 'Contact:',\n    website: 'Website:',\n    github: 'GitHub:',\n    contactEmail: 'Send email to Dr. Ádám Porkoláb',\n    websiteLink: 'Dr. Ádám Porkoláb\\'s website (opens in new tab)',\n    githubLink: 'GitHub profile (opens in new tab)',\n    \n    // Error messages\n    errors: {\n      validation: 'Invalid data. Please check the entered values.',\n      network: 'Network error occurred. Please try again later.',\n      audio: 'Audio playback error. Check your sound settings.',\n      gameLogic: 'Game error occurred. The game will restart automatically.',\n      ui: 'Display error occurred. Please refresh the page.',\n      storage: 'Data storage error. Check your browser settings.',\n      generic: 'Unexpected error occurred. Please try again.',\n      colorComparison: 'Error occurred during color comparison.',\n      audioPlayback: 'Audio file error: ',\n      audioError: 'Error occurred during audio playback.'\n    }\n  }\n};\n\n/**\n * I18n class for internationalization support\n */\nexport class I18n {\n  constructor() {\n    this.currentLocale = this.detectLocale();\n    this.translations = translations;\n    this.fallbackLocale = 'en';\n    \n    // Cache for performance\n    this.cache = new Map();\n  }\n  \n  /**\n   * Initialize i18n with given or detected locale\n   * @param {string} locale - Optional locale to set\n   */\n  async initialize(locale) {\n    if (locale && this.isLocaleSupported(locale)) {\n      this.setLocale(locale);\n    } else {\n      this.setLocale(this.detectLocale());\n    }\n    return Promise.resolve();\n  }\n  \n  /**\n   * Detect user's preferred locale\n   * @private\n   * @returns {string} Detected locale\n   */\n  detectLocale() {\n    // Check localStorage first\n    const saved = localStorage.getItem('tonetracker_locale');\n    if (saved && this.isLocaleSupported(saved)) {\n      return saved;\n    }\n    \n    // Check browser language\n    const browserLang = navigator.language || navigator.userLanguage;\n    const langCode = browserLang.split('-')[0];\n    \n    if (this.isLocaleSupported(langCode)) {\n      return langCode;\n    }\n    \n    // Default to Hungarian (original language)\n    return 'hu';\n  }\n  \n  /**\n   * Check if locale is supported\n   * @param {string} locale - Locale code to check\n   * @returns {boolean} Whether locale is supported\n   */\n  isLocaleSupported(locale) {\n    return locale && this.translations && typeof this.translations === 'object' && locale in this.translations;\n  }\n  \n  /**\n   * Get available locales\n   * @returns {Array<string>} Array of supported locale codes\n   */\n  getAvailableLocales() {\n    return Object.keys(this.translations);\n  }\n  \n  /**\n   * Set current locale\n   * @param {string} locale - Locale code to set\n   * @throws {ToneTrackerError} When locale is not supported\n   */\n  setLocale(locale) {\n    if (!this.isLocaleSupported(locale)) {\n      throw new ToneTrackerError(\n        `Unsupported locale: ${locale}`,\n        ERROR_CATEGORIES.VALIDATION,\n        ERROR_LEVELS.ERROR,\n        { locale, supportedLocales: this.getAvailableLocales() }\n      );\n    }\n    \n    this.currentLocale = locale;\n    this.cache.clear(); // Clear cache when locale changes\n    \n    // Save to localStorage\n    localStorage.setItem('tonetracker_locale', locale);\n    \n    // Update document language\n    document.documentElement.lang = locale;\n    \n    // Dispatch event for components to react\n    window.dispatchEvent(new CustomEvent('localeChanged', {\n      detail: { locale, previousLocale: this.currentLocale }\n    }));\n  }\n  \n  /**\n   * Get current locale\n   * @returns {string} Current locale code\n   */\n  getCurrentLocale() {\n    return this.currentLocale;\n  }\n  \n  /**\n   * Alias for getCurrentLocale for compatibility\n   */\n  getCurrentLanguage() {\n    return this.getCurrentLocale();\n  }\n  \n  /**\n   * Translate a key with optional interpolation\n   * @param {string} key - Translation key (dot notation supported)\n   * @param {Object} params - Parameters for interpolation\n   * @returns {string} Translated text\n   */\n  t(key, params = {}) {\n    // Check cache first\n    const cacheKey = `${this.currentLocale}:${key}:${JSON.stringify(params)}`;\n    if (this.cache.has(cacheKey)) {\n      return this.cache.get(cacheKey);\n    }\n    \n    let translation = this.getTranslation(key, this.currentLocale);\n    \n    // Fallback to fallback locale if not found\n    if (translation === key && this.currentLocale !== this.fallbackLocale) {\n      translation = this.getTranslation(key, this.fallbackLocale);\n    }\n    \n    // Interpolate parameters\n    if (params && typeof translation === 'string') {\n      translation = this.interpolate(translation, params);\n    }\n    \n    // Cache result\n    this.cache.set(cacheKey, translation);\n    \n    return translation;\n  }\n  \n  /**\n   * Get translation for a specific locale\n   * @private\n   * @param {string} key - Translation key\n   * @param {string} locale - Locale code\n   * @returns {string} Translation or key if not found\n   */\n  getTranslation(key, locale) {\n    const localeTranslations = this.translations[locale];\n    if (!localeTranslations) {\n      return key;\n    }\n    \n    // Support dot notation (e.g., 'errors.validation')\n    const keys = key.split('.');\n    let value = localeTranslations;\n    \n    for (const k of keys) {\n      if (value && typeof value === 'object' && k in value) {\n        value = value[k];\n      } else {\n        return key; // Key not found\n      }\n    }\n    \n    return typeof value === 'string' ? value : key;\n  }\n  \n  /**\n   * Interpolate parameters in translation string\n   * @private\n   * @param {string} template - Template string with {{param}} placeholders\n   * @param {Object} params - Parameters to interpolate\n   * @returns {string} Interpolated string\n   */\n  interpolate(template, params) {\n    return template.replace(/\\{\\{(\\w+)\\}\\}/g, (match, key) => {\n      return Object.prototype.hasOwnProperty.call(params, key) ? String(params[key]) : match;\n    });\n  }\n  \n  /**\n   * Format time according to locale\n   * @param {number} seconds - Time in seconds\n   * @returns {string} Formatted time string\n   */\n  formatTime(seconds) {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    \n    const timeFormat = this.t('timeFormat');\n    let parts = [];\n    \n    if (hours > 0) {\n      parts.push(`${hours} ${timeFormat.hours}`);\n    }\n    if (minutes > 0 || hours > 0) {\n      parts.push(`${minutes} ${timeFormat.minutes}`);\n    }\n    parts.push(`${secs} ${timeFormat.seconds}`);\n    \n    return parts.join(' ');\n  }\n  \n  /**\n   * Format percentage for display\n   * @param {number} percentage - Percentage value\n   * @param {number} decimals - Number of decimal places\n   * @returns {string} Formatted percentage\n   */\n  formatPercentage(percentage, decimals = 2) {\n    return `${percentage.toFixed(decimals)}%`;\n  }\n  \n  /**\n   * Get localized error message\n   * @param {string} errorType - Error type from ERROR_CATEGORIES\n   * @returns {string} Localized error message\n   */\n  getErrorMessage(errorType) {\n    const key = `errors.${errorType}`;\n    const message = this.t(key);\n    return message !== key ? message : this.t('errors.generic');\n  }\n  \n  /**\n   * Create a language switcher\n   * @param {HTMLElement} container - Container element for language switcher\n   */\n  /**\n   * Create a language switcher element\n   * If a function is passed, it will be used as onChange callback and the element will be returned.\n   * If a DOM element is passed, the switcher will be appended to it.\n   * @param {Function|HTMLElement} target - onChange callback or container element\n   * @returns {HTMLElement} The created switcher element\n   */\n  createLanguageSwitcher(target) {\n    const container = document.createElement('div');\n    container.className = 'language-switcher d-flex align-items-center';\n\n    const label = document.createElement('label');\n    label.textContent = this.t('language') || 'Language';\n    label.htmlFor = 'language-switcher';\n    label.style.marginRight = '8px';\n\n    const select = document.createElement('select');\n    select.id = 'language-switcher';\n    select.setAttribute('aria-label', this.t('languageSelector') || 'Language selector');\n\n    const localeNames = {\n      hu: 'Magyar',\n      en: 'English'\n    };\n\n    this.getAvailableLocales().forEach(locale => {\n      const option = document.createElement('option');\n      option.value = locale;\n      option.textContent = localeNames[locale] || locale.toUpperCase();\n      option.selected = locale === this.currentLocale;\n      select.appendChild(option);\n    });\n\n    select.addEventListener('change', (event) => {\n      const prev = this.currentLocale;\n      this.setLocale(event.target.value);\n      if (typeof target === 'function') {\n        target(event.target.value, prev);\n      }\n    });\n\n    container.appendChild(label);\n    container.appendChild(select);\n\n    // Update on locale change\n    window.addEventListener('localeChanged', () => {\n      label.textContent = this.t('language') || 'Language';\n      select.setAttribute('aria-label', this.t('languageSelector') || 'Language selector');\n    });\n\n    if (target && target instanceof HTMLElement) {\n      target.appendChild(container);\n    }\n    return container;\n  }\n  \n  /**\n   * Clear translation cache\n   */\n  clearCache() {\n    this.cache.clear();\n  }\n  \n  /**\n   * Get cache statistics\n   * @returns {Object} Cache statistics\n   */\n  getCacheStats() {\n    return {\n      size: this.cache.size,\n      maxSize: 1000, // Could be configurable\n      hitRate: this.cacheHits / (this.cacheHits + this.cacheMisses) || 0\n    };\n  }\n}\n\n// Export singleton instance\nexport const i18n = new I18n();\n\n// Convenience function for translation\nexport const t = (key, params) => i18n.t(key, params);\n","/**\n * @fileoverview PWA Manager for handling Progressive Web App functionality\n * Manages service worker, caching, offline support, and app installation\n */\n\nimport { analytics, EVENT_TYPES } from './analytics.js';\nimport { ToneTrackerError, ERROR_CATEGORIES, ERROR_LEVELS } from './errorHandler.js';\n\n/**\n * PWA Manager class for handling Progressive Web App features\n */\nexport class PWAManager {\n  constructor() {\n    this.serviceWorker = null;\n    this.isOnline = navigator.onLine;\n    this.installPrompt = null;\n    this.updateAvailable = false;\n    \n    this.initialize();\n  }\n\n  /**\n   * Initialize PWA Manager\n   * @private\n   */\n  async initialize() {\n    try {\n      // Register service worker\n      await this.registerServiceWorker();\n      \n      // Setup connectivity monitoring\n      this.setupConnectivityMonitoring();\n      \n      // Setup install prompt handling\n      this.setupInstallPrompt();\n      \n      // Setup app lifecycle events\n      this.setupAppLifecycle();\n      \n      console.log('📱 PWA Manager initialized');\n    } catch (error) {\n      console.error('❌ PWA Manager initialization failed:', error);\n    }\n  }\n\n  /**\n   * Register service worker\n   * @private\n   */\n  async registerServiceWorker() {\n    if (!('serviceWorker' in navigator)) {\n      console.warn('⚠️ Service workers not supported');\n      return;\n    }\n\n    try {\n      const registration = await navigator.serviceWorker.register('/sw.js', {\n        scope: '/'\n      });\n\n      this.serviceWorker = registration;\n      \n      console.log('✅ Service worker registered:', registration.scope);\n      \n      // Handle updates\n      registration.addEventListener('updatefound', () => {\n        this.handleServiceWorkerUpdate(registration);\n      });\n\n      // Check for existing update\n      if (registration.waiting) {\n        this.showUpdatePrompt();\n      }\n\n      analytics.track(EVENT_TYPES.FEATURE_USED, {\n        feature: 'service-worker-registration',\n        success: true\n      });\n\n    } catch (error) {\n      console.error('❌ Service worker registration failed:', error);\n      analytics.trackError(new ToneTrackerError(\n        'Service worker registration failed',\n        ERROR_CATEGORIES.SYSTEM,\n        ERROR_LEVELS.ERROR,\n        { originalError: error.message }\n      ));\n    }\n  }\n\n  /**\n   * Handle service worker updates\n   * @private\n   */\n  handleServiceWorkerUpdate(registration) {\n    const newWorker = registration.installing;\n    \n    console.log('🔄 New service worker installing...');\n    \n    newWorker.addEventListener('statechange', () => {\n      if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {\n        console.log('✨ New service worker ready!');\n        this.updateAvailable = true;\n        this.showUpdatePrompt();\n        \n        analytics.track(EVENT_TYPES.FEATURE_USED, {\n          feature: 'service-worker-update',\n          available: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Show update prompt to user\n   * @private\n   */\n  showUpdatePrompt() {\n    // Create update notification\n    const notification = document.createElement('div');\n    notification.className = 'pwa-update-notification';\n    notification.innerHTML = `\n      <div class=\"update-banner\">\n        <div class=\"update-content\">\n          <span class=\"update-icon\">🔄</span>\n          <div class=\"update-text\">\n            <strong>App Update Available</strong>\n            <p>A new version of ToneTracker is ready!</p>\n          </div>\n          <div class=\"update-actions\">\n            <button class=\"btn btn-primary btn-sm update-btn\" onclick=\"window.pwaManager.applyUpdate()\">\n              Update Now\n            </button>\n            <button class=\"btn btn-secondary btn-sm dismiss-btn\" onclick=\"this.closest('.pwa-update-notification').remove()\">\n              Later\n            </button>\n          </div>\n        </div>\n      </div>\n    `;\n\n    // Add styles\n    const style = document.createElement('style');\n    style.textContent = `\n      .pwa-update-notification {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        z-index: 10000;\n        background: rgba(0, 0, 0, 0.1);\n        backdrop-filter: blur(5px);\n      }\n      \n      .update-banner {\n        background: linear-gradient(135deg, #4f46e5, #7c3aed);\n        color: white;\n        padding: 16px;\n        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);\n      }\n      \n      .update-content {\n        display: flex;\n        align-items: center;\n        max-width: 1200px;\n        margin: 0 auto;\n        gap: 16px;\n      }\n      \n      .update-icon {\n        font-size: 24px;\n        animation: spin 2s linear infinite;\n      }\n      \n      .update-text {\n        flex: 1;\n      }\n      \n      .update-text strong {\n        display: block;\n        margin-bottom: 4px;\n      }\n      \n      .update-text p {\n        margin: 0;\n        opacity: 0.9;\n        font-size: 14px;\n      }\n      \n      .update-actions {\n        display: flex;\n        gap: 8px;\n      }\n      \n      .update-btn, .dismiss-btn {\n        padding: 8px 16px;\n        border: none;\n        border-radius: 6px;\n        cursor: pointer;\n        font-weight: 500;\n        transition: all 0.2s ease;\n      }\n      \n      .update-btn {\n        background: white;\n        color: #4f46e5;\n      }\n      \n      .update-btn:hover {\n        background: #f3f4f6;\n        transform: translateY(-1px);\n      }\n      \n      .dismiss-btn {\n        background: rgba(255, 255, 255, 0.2);\n        color: white;\n        border: 1px solid rgba(255, 255, 255, 0.3);\n      }\n      \n      .dismiss-btn:hover {\n        background: rgba(255, 255, 255, 0.3);\n      }\n      \n      @keyframes spin {\n        from { transform: rotate(0deg); }\n        to { transform: rotate(360deg); }\n      }\n      \n      @media (max-width: 768px) {\n        .update-content {\n          flex-direction: column;\n          text-align: center;\n        }\n        \n        .update-actions {\n          justify-content: center;\n        }\n      }\n    `;\n\n    document.head.appendChild(style);\n    document.body.appendChild(notification);\n\n    // Auto-dismiss after 30 seconds if no action\n    setTimeout(() => {\n      if (notification.parentElement) {\n        notification.remove();\n      }\n    }, 30000);\n  }\n\n  /**\n   * Apply service worker update\n   */\n  async applyUpdate() {\n    if (this.serviceWorker && this.serviceWorker.waiting) {\n      this.serviceWorker.waiting.postMessage({ type: 'SKIP_WAITING' });\n      \n      // Reload page when new worker takes control\n      navigator.serviceWorker.addEventListener('controllerchange', () => {\n        window.location.reload();\n      });\n      \n      analytics.track(EVENT_TYPES.FEATURE_USED, {\n        feature: 'service-worker-update-applied'\n      });\n    }\n  }\n\n  /**\n   * Setup connectivity monitoring\n   * @private\n   */\n  setupConnectivityMonitoring() {\n    window.addEventListener('online', () => {\n      console.log('🌐 Connection restored');\n      this.isOnline = true;\n      this.hideOfflineIndicator();\n      \n      analytics.track(EVENT_TYPES.FEATURE_USED, {\n        feature: 'connectivity-online'\n      });\n    });\n\n    window.addEventListener('offline', () => {\n      console.log('📡 Connection lost');\n      this.isOnline = false;\n      this.showOfflineIndicator();\n      \n      analytics.track(EVENT_TYPES.FEATURE_USED, {\n        feature: 'connectivity-offline'\n      });\n    });\n\n    // Initial state\n    if (!this.isOnline) {\n      this.showOfflineIndicator();\n    }\n  }\n\n  /**\n   * Show offline indicator\n   * @private\n   */\n  showOfflineIndicator() {\n    // Remove existing indicator\n    this.hideOfflineIndicator();\n\n    const indicator = document.createElement('div');\n    indicator.className = 'offline-indicator';\n    indicator.innerHTML = `\n      <div style=\"\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        background: #dc3545;\n        color: white;\n        padding: 12px;\n        text-align: center;\n        z-index: 9999;\n        font-weight: 500;\n        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n      \">\n        <span style=\"margin-right: 8px;\">📡</span>\n        You're offline - Some features may not work properly\n      </div>\n    `;\n\n    document.body.appendChild(indicator);\n  }\n\n  /**\n   * Hide offline indicator\n   * @private\n   */\n  hideOfflineIndicator() {\n    const indicator = document.querySelector('.offline-indicator');\n    if (indicator) {\n      indicator.remove();\n    }\n  }\n\n  /**\n   * Setup install prompt handling\n   * @private\n   */\n  setupInstallPrompt() {\n    window.addEventListener('beforeinstallprompt', (e) => {\n      console.log('📱 Install prompt available');\n      e.preventDefault();\n      this.installPrompt = e;\n      this.showInstallPrompt();\n\n      analytics.track(EVENT_TYPES.FEATURE_USED, {\n        feature: 'install-prompt-available'\n      });\n    });\n  }\n\n  /**\n   * Show install prompt\n   * @private\n   */\n  showInstallPrompt() {\n    // Don't show if already installed or user dismissed recently\n    const dismissed = localStorage.getItem('install-prompt-dismissed');\n    if (dismissed && Date.now() - parseInt(dismissed) < 7 * 24 * 60 * 60 * 1000) {\n      return; // Don't show for 7 days after dismissal\n    }\n\n    const installBanner = document.createElement('div');\n    installBanner.className = 'install-banner';\n    installBanner.innerHTML = `\n      <div style=\"\n        position: fixed;\n        bottom: 20px;\n        right: 20px;\n        background: linear-gradient(135deg, #4f46e5, #7c3aed);\n        color: white;\n        padding: 16px 20px;\n        border-radius: 12px;\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n        z-index: 1000;\n        max-width: 300px;\n        animation: slideIn 0.3s ease-out;\n      \">\n        <div style=\"display: flex; align-items: center; margin-bottom: 8px;\">\n          <span style=\"font-size: 20px; margin-right: 8px;\">📱</span>\n          <strong>Install ToneTracker</strong>\n        </div>\n        <p style=\"margin: 0 0 12px 0; font-size: 14px; opacity: 0.9;\">\n          Install the app for a better experience!\n        </p>\n        <div style=\"display: flex; gap: 8px;\">\n          <button class=\"install-yes\" style=\"\n            background: white;\n            color: #4f46e5;\n            border: none;\n            padding: 8px 16px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-weight: 500;\n            flex: 1;\n          \">Install</button>\n          <button class=\"install-no\" style=\"\n            background: rgba(255, 255, 255, 0.2);\n            color: white;\n            border: 1px solid rgba(255, 255, 255, 0.3);\n            padding: 8px 16px;\n            border-radius: 6px;\n            cursor: pointer;\n            font-weight: 500;\n          \">Not now</button>\n        </div>\n      </div>\n    `;\n\n    // Add animation styles\n    const style = document.createElement('style');\n    style.textContent = `\n      @keyframes slideIn {\n        from {\n          transform: translateY(100px);\n          opacity: 0;\n        }\n        to {\n          transform: translateY(0);\n          opacity: 1;\n        }\n      }\n    `;\n    document.head.appendChild(style);\n\n    document.body.appendChild(installBanner);\n\n    // Add event listeners\n    installBanner.querySelector('.install-yes').addEventListener('click', () => {\n      this.installApp();\n      installBanner.remove();\n    });\n\n    installBanner.querySelector('.install-no').addEventListener('click', () => {\n      localStorage.setItem('install-prompt-dismissed', Date.now().toString());\n      installBanner.remove();\n      \n      analytics.track(EVENT_TYPES.FEATURE_USED, {\n        feature: 'install-prompt-dismissed'\n      });\n    });\n\n    // Auto-remove after 10 seconds\n    setTimeout(() => {\n      if (installBanner.parentElement) {\n        installBanner.remove();\n      }\n    }, 10000);\n  }\n\n  /**\n   * Install the app\n   */\n  async installApp() {\n    if (!this.installPrompt) return;\n\n    try {\n      this.installPrompt.prompt();\n      const { outcome } = await this.installPrompt.userChoice;\n      \n      console.log('📱 Install outcome:', outcome);\n      \n      analytics.track(EVENT_TYPES.FEATURE_USED, {\n        feature: 'app-install-attempt',\n        outcome: outcome\n      });\n\n      this.installPrompt = null;\n    } catch (error) {\n      console.error('❌ Install failed:', error);\n      analytics.trackError(new ToneTrackerError(\n        'App installation failed',\n        ERROR_CATEGORIES.SYSTEM,\n        ERROR_LEVELS.ERROR,\n        { originalError: error.message }\n      ));\n    }\n  }\n\n  /**\n   * Setup app lifecycle events\n   * @private\n   */\n  setupAppLifecycle() {\n    // Track app installation\n    window.addEventListener('appinstalled', () => {\n      console.log('✅ App installed successfully');\n      \n      analytics.track(EVENT_TYPES.FEATURE_USED, {\n        feature: 'app-installed-success',\n        timestamp: Date.now()\n      });\n    });\n\n    // Detect PWA mode\n    const isStandalone = window.matchMedia('(display-mode: standalone)').matches || \n                        window.navigator.standalone === true;\n\n    if (isStandalone) {\n      console.log('📱 Running as PWA');\n      document.documentElement.classList.add('pwa-mode');\n      \n      analytics.track(EVENT_TYPES.FEATURE_USED, {\n        feature: 'pwa-mode-detected',\n        displayMode: 'standalone'\n      });\n    }\n\n    // Handle focus/blur for background sync\n    document.addEventListener('visibilitychange', () => {\n      if (document.visibilityState === 'visible') {\n        this.handleAppForeground();\n      } else {\n        this.handleAppBackground();\n      }\n    });\n  }\n\n  /**\n   * Handle app coming to foreground\n   * @private\n   */\n  handleAppForeground() {\n    console.log('📱 App in foreground');\n    \n    // Check for updates\n    if (this.serviceWorker) {\n      this.serviceWorker.update();\n    }\n    \n    analytics.track(EVENT_TYPES.FEATURE_USED, {\n      feature: 'app-foreground'\n    });\n  }\n\n  /**\n   * Handle app going to background\n   * @private\n   */\n  handleAppBackground() {\n    console.log('📱 App in background');\n    \n    // Sync data\n    this.syncInBackground();\n    \n    analytics.track(EVENT_TYPES.FEATURE_USED, {\n      feature: 'app-background'\n    });\n  }\n\n  /**\n   * Sync data in background\n   * @private\n   */\n  async syncInBackground() {\n    if ('serviceWorker' in navigator && 'sync' in window.ServiceWorkerRegistration.prototype) {\n      try {\n        const registration = await navigator.serviceWorker.ready;\n        await registration.sync.register('analytics-sync');\n        console.log('📊 Background sync registered');\n      } catch (error) {\n        console.warn('⚠️ Background sync registration failed:', error);\n      }\n    }\n  }\n\n  /**\n   * Get PWA status information\n   * @returns {Object} PWA status\n   */\n  getStatus() {\n    return {\n      serviceWorkerRegistered: !!this.serviceWorker,\n      isOnline: this.isOnline,\n      canInstall: !!this.installPrompt,\n      updateAvailable: this.updateAvailable,\n      isStandalone: window.matchMedia('(display-mode: standalone)').matches || \n                   window.navigator.standalone === true\n    };\n  }\n\n  /**\n   * Clear all app data and caches\n   */\n  async clearAppData() {\n    try {\n      // Clear caches\n      const cacheNames = await caches.keys();\n      await Promise.all(cacheNames.map(name => caches.delete(name)));\n      \n      // Clear local storage (keep user preferences)\n      const keysToKeep = ['tonetracker_user_preferences', 'tonetracker_user_id'];\n      const allKeys = Object.keys(localStorage);\n      \n      allKeys.forEach(key => {\n        if (!keysToKeep.includes(key)) {\n          localStorage.removeItem(key);\n        }\n      });\n      \n      console.log('🧹 App data cleared');\n      \n      analytics.track(EVENT_TYPES.FEATURE_USED, {\n        feature: 'app-data-cleared'\n      });\n      \n    } catch (error) {\n      console.error('❌ Failed to clear app data:', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Request persistent storage\n   */\n  async requestPersistentStorage() {\n    if ('storage' in navigator && 'persist' in navigator.storage) {\n      try {\n        const granted = await navigator.storage.persist();\n        console.log('💾 Persistent storage:', granted ? 'granted' : 'denied');\n        \n        analytics.track(EVENT_TYPES.FEATURE_USED, {\n          feature: 'persistent-storage-request',\n          granted: granted\n        });\n        \n        return granted;\n      } catch (error) {\n        console.error('❌ Persistent storage request failed:', error);\n        return false;\n      }\n    }\n    return false;\n  }\n}\n\n// Export singleton instance\nexport const pwaManager = new PWAManager();\n\n// Make it globally available\nwindow.pwaManager = pwaManager;\n"],"names":["ERROR_LEVELS","ERROR_CATEGORIES","ToneTrackerError","message","category","level","context","ErrorLogger","error","additionalContext","logEntry","consoleMethod","storedErrors","count","logger","ErrorHandler","event","showToUser","userMessage","errorElement","asyncFn","args","syncFn","logs","stats","log","STORAGE_KEYS","SCHEMA_VERSION","DEFAULT_GAME_STATISTICS","DEFAULT_USER_PREFERENCES","DEFAULT_HIGH_SCORES","StorageManager","testKey","prefs","scores","oldStats","newStats","oldPrefs","newPrefs","oldScores","newScores","key","data","value","serialized","defaultValue","parsed","updates","updated","gameResult","won","score","time","difficulty","accuracy","targetColor","userGuess","scoreData","highScores","a","b","limit","callback","keyListeners","name","merge","existing","totalSize","keyData","size","bytes","k","sizes","i","storage","EVENT_TYPES","EVENT_CATEGORIES","ANALYTICS_CONFIG","Analytics","config","userId","nav","screen","str","hash","char","canvas","stored","eventType","properties","gameEvents","uiEvents","performanceEvents","accessibilityEvents","force","eventsToFlush","events","endpoint","apiKey","payload","response","summary","e","isCorrect","feature","metric","color1","color2","hex1","hex2","r1","g1","b1","r2","g2","b2","enabled","analytics","trackEvent","type","trackGameStart","color","trackGameEnd","PerformanceMonitor","navObserver","list","entry","resourceObserver","paintObserver","lcpObserver","fidObserver","cumulativeLayoutShift","clsObserver","timing","navigation","metrics","resourceType","duration","url","label","startTime","unit","threshold","report","observer","FPSMonitor","now","delta","fps","avgFps","sum","s","frameTimes","f","performanceMonitor","fpsMonitor","startTiming","endTiming","translations","I18n","locale","saved","langCode","params","cacheKey","translation","localeTranslations","keys","template","match","seconds","hours","minutes","secs","timeFormat","parts","percentage","decimals","errorType","target","container","select","localeNames","option","prev","i18n","PWAManager","registration","newWorker","notification","style","indicator","dismissed","installBanner","outcome","cacheNames","keysToKeep","granted","pwaManager"],"mappings":"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"}